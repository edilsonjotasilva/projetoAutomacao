/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.com.informatica.telas;

//import br.com.informatica.dal.ConexaoBanco;
import br.com.informatica.dal.Conexao;
import static br.com.informatica.telas.TelaEntrada.pst;
import static br.com.informatica.telas.TelaSaida.pst;
//import com.sun.glass.events.KeyEvent;
//import com.sun.glass.events.MouseEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JOptionPane;
import net.proteanit.sql.DbUtils;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.view.JasperViewer;
import org.apache.commons.logging.LogFactory;

/**
 *
 * @author edilson
 */
public class TelaCorretor extends javax.swing.JInternalFrame {

    PreparedStatement pst = null;
    Connection conexao = null;
    ResultSet rs = null;

    public TelaCorretor() {
        initComponents();
         jCbUFcorretor.setSelectedItem("GO");
        btnAlteraCorretor.setEnabled(false);
        btnExcluirCorretor.setEnabled(false);
        // conexao = ConexaoBanco.conector;
        conexao = Conexao.conector;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlDadosCorretor = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtCodCorretor = new javax.swing.JTextField();
        txtNomeCorretor = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtEmailCorretor = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        txtContatoCorretor = new javax.swing.JTextField();
        txtTelefoneCorretor = new javax.swing.JFormattedTextField();
        txtCelularCorretor = new javax.swing.JFormattedTextField();
        txtCpfCorretor = new javax.swing.JFormattedTextField();
        txtRgCorretor = new javax.swing.JTextField();
        pnlEnderecoCorretor = new javax.swing.JPanel();
        txtComplementoCorretor = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        txtQuadraCorretor = new javax.swing.JTextField();
        txtBairroCorretor = new javax.swing.JTextField();
        txtLoteCorretor = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        txtNumeroCorretor = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        txtRuaCorretor = new javax.swing.JTextField();
        txtCidadeCorretor = new javax.swing.JTextField();
        txtCepCorretor = new javax.swing.JFormattedTextField();
        pnlMenuCorretor = new javax.swing.JPanel();
        btnCadastraCorretor = new javax.swing.JButton();
        btnAlteraCorretor = new javax.swing.JButton();
        btnExcluirCorretor = new javax.swing.JButton();
        btnImprimeCorretor = new javax.swing.JButton();
        btnLimparCorretor = new javax.swing.JButton();
        jLabel18 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblCorretor = new javax.swing.JTable();
        jLabel19 = new javax.swing.JLabel();
        txtPesquisarCorretor = new javax.swing.JTextField();
        jCbUFcorretor = new javax.swing.JComboBox<>();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setTitle("Tela Corretor");

        pnlDadosCorretor.setBackground(new java.awt.Color(204, 240, 240));
        pnlDadosCorretor.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel1.setText("ID Cli");

        jLabel2.setText("Nome ");

        txtCodCorretor.setEnabled(false);

        txtNomeCorretor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNomeCorretorActionPerformed(evt);
            }
        });

        jLabel3.setText("Tel");

        jLabel4.setText("Cel");

        jLabel5.setText("CPF");

        jLabel6.setText("RG.");

        jLabel7.setText("Email");

        jLabel17.setText("Contato");

        try {
            txtTelefoneCorretor.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("(##)####-####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        try {
            txtCelularCorretor.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("(##)#####-####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        try {
            txtCpfCorretor.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###.###.###-##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        txtRgCorretor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtRgCorretorActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlDadosCorretorLayout = new javax.swing.GroupLayout(pnlDadosCorretor);
        pnlDadosCorretor.setLayout(pnlDadosCorretorLayout);
        pnlDadosCorretorLayout.setHorizontalGroup(
            pnlDadosCorretorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDadosCorretorLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(pnlDadosCorretorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlDadosCorretorLayout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtNomeCorretor, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtEmailCorretor, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlDadosCorretorLayout.createSequentialGroup()
                        .addGroup(pnlDadosCorretorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlDadosCorretorLayout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(18, 18, 18)
                                .addComponent(txtCodCorretor, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(pnlDadosCorretorLayout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addGap(21, 21, 21)
                                .addComponent(txtCpfCorretor, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtRgCorretor, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(20, 20, 20)
                        .addComponent(jLabel17)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtContatoCorretor, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtTelefoneCorretor, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtCelularCorretor, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(59, Short.MAX_VALUE))
        );
        pnlDadosCorretorLayout.setVerticalGroup(
            pnlDadosCorretorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDadosCorretorLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlDadosCorretorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtCodCorretor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlDadosCorretorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtNomeCorretor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtEmailCorretor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(txtTelefoneCorretor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtCelularCorretor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 11, Short.MAX_VALUE)
                .addGroup(pnlDadosCorretorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlDadosCorretorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel17)
                        .addComponent(txtContatoCorretor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlDadosCorretorLayout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jLabel5))
                    .addGroup(pnlDadosCorretorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtCpfCorretor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel6)
                        .addComponent(txtRgCorretor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        pnlEnderecoCorretor.setBackground(new java.awt.Color(204, 240, 240));
        pnlEnderecoCorretor.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel8.setText("Lote");

        jLabel9.setText("Cidade");

        jLabel10.setText("Num");

        jLabel11.setText("CEP");

        jLabel13.setText("Bairro");

        txtBairroCorretor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBairroCorretorActionPerformed(evt);
            }
        });

        jLabel14.setText("Comple");

        jLabel15.setText("Rua");

        jLabel16.setText("Quadra");

        txtRuaCorretor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtRuaCorretorActionPerformed(evt);
            }
        });

        try {
            txtCepCorretor.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("#####-###")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        pnlMenuCorretor.setAlignmentX(0.0F);
        pnlMenuCorretor.setAlignmentY(0.0F);
        pnlMenuCorretor.setAutoscrolls(true);

        btnCadastraCorretor.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/informatica/icones/add_cliente.png"))); // NOI18N
        btnCadastraCorretor.setAlignmentX(-40.0F);
        btnCadastraCorretor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCadastraCorretorActionPerformed(evt);
            }
        });

        btnAlteraCorretor.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/informatica/icones/alterar_registro.png"))); // NOI18N
        btnAlteraCorretor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAlteraCorretorActionPerformed(evt);
            }
        });

        btnExcluirCorretor.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/informatica/icones/delete_cliente.png"))); // NOI18N
        btnExcluirCorretor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirCorretorActionPerformed(evt);
            }
        });

        btnImprimeCorretor.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/informatica/icones/impressora2.png"))); // NOI18N
        btnImprimeCorretor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnImprimeCorretorActionPerformed(evt);
            }
        });

        btnLimparCorretor.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/informatica/icones/clear.png"))); // NOI18N
        btnLimparCorretor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimparCorretorActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlMenuCorretorLayout = new javax.swing.GroupLayout(pnlMenuCorretor);
        pnlMenuCorretor.setLayout(pnlMenuCorretorLayout);
        pnlMenuCorretorLayout.setHorizontalGroup(
            pnlMenuCorretorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlMenuCorretorLayout.createSequentialGroup()
                .addGap(1, 1, 1)
                .addComponent(btnCadastraCorretor, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(btnAlteraCorretor, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(btnExcluirCorretor, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(btnImprimeCorretor, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnLimparCorretor, javax.swing.GroupLayout.DEFAULT_SIZE, 110, Short.MAX_VALUE))
        );
        pnlMenuCorretorLayout.setVerticalGroup(
            pnlMenuCorretorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(btnLimparCorretor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(pnlMenuCorretorLayout.createSequentialGroup()
                .addGroup(pnlMenuCorretorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnCadastraCorretor)
                    .addComponent(btnAlteraCorretor, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnExcluirCorretor, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnImprimeCorretor, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jLabel18.setText("UF");

        tblCorretor.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "ID", "NOME", "TELF", "CEL", "CPF", "RG", "EMAIL", "CONTATO", "RUA", "QUD", "LOTE", "NUM", "STR", "COMP", "CEP", "CIDAD", "UF"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblCorretor.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblCorretorMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblCorretor);

        jLabel19.setText("Pesquisar Cliente");

        txtPesquisarCorretor.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtPesquisarCorretorKeyReleased(evt);
            }
        });

        jCbUFcorretor.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "AC", "AL", "AP", "AM", "BA", "CE", "DF", "ES", "GO", "MA", "MT", "MS", "MG", "PA", "PB", "PR", "PE", "PI", "RJ", "RN", "RS", "RO", "RR", "SC", "SP", "SE", "TO" }));

        javax.swing.GroupLayout pnlEnderecoCorretorLayout = new javax.swing.GroupLayout(pnlEnderecoCorretor);
        pnlEnderecoCorretor.setLayout(pnlEnderecoCorretorLayout);
        pnlEnderecoCorretorLayout.setHorizontalGroup(
            pnlEnderecoCorretorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlEnderecoCorretorLayout.createSequentialGroup()
                .addGroup(pnlEnderecoCorretorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(pnlEnderecoCorretorLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1))
                    .addGroup(pnlEnderecoCorretorLayout.createSequentialGroup()
                        .addGroup(pnlEnderecoCorretorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlEnderecoCorretorLayout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(pnlEnderecoCorretorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel14)
                                    .addComponent(jLabel15))
                                .addGap(18, 18, 18)
                                .addGroup(pnlEnderecoCorretorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtRuaCorretor, javax.swing.GroupLayout.DEFAULT_SIZE, 295, Short.MAX_VALUE)
                                    .addComponent(txtComplementoCorretor))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(pnlEnderecoCorretorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel16)
                                    .addComponent(jLabel9))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(pnlEnderecoCorretorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(pnlEnderecoCorretorLayout.createSequentialGroup()
                                        .addComponent(txtCidadeCorretor, javax.swing.GroupLayout.PREFERRED_SIZE, 257, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jLabel11)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtCepCorretor, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel18)
                                        .addGap(29, 29, 29)
                                        .addComponent(jCbUFcorretor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(pnlEnderecoCorretorLayout.createSequentialGroup()
                                        .addComponent(txtQuadraCorretor, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jLabel8)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtLoteCorretor, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jLabel10)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtNumeroCorretor, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jLabel13)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(txtBairroCorretor, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(pnlEnderecoCorretorLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel19)
                                .addGap(18, 18, 18)
                                .addGroup(pnlEnderecoCorretorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtPesquisarCorretor, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(pnlMenuCorretor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(38, 38, 38)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlEnderecoCorretorLayout.setVerticalGroup(
            pnlEnderecoCorretorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlEnderecoCorretorLayout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(pnlEnderecoCorretorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(txtRuaCorretor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel16)
                    .addComponent(jLabel8)
                    .addComponent(jLabel10)
                    .addComponent(txtQuadraCorretor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtLoteCorretor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtNumeroCorretor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13)
                    .addComponent(txtBairroCorretor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlEnderecoCorretorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(txtComplementoCorretor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9)
                    .addComponent(txtCidadeCorretor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11)
                    .addComponent(jLabel18)
                    .addComponent(txtCepCorretor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCbUFcorretor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addGroup(pnlEnderecoCorretorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel19)
                    .addComponent(txtPesquisarCorretor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 65, Short.MAX_VALUE)
                .addComponent(pnlMenuCorretor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnlEnderecoCorretor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlDadosCorretor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(pnlDadosCorretor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlEnderecoCorretor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(16, 16, 16))
        );

        setBounds(0, 0, 970, 610);
    }// </editor-fold>//GEN-END:initComponents

    private void txtNomeCorretorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNomeCorretorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNomeCorretorActionPerformed

    private void btnExcluirCorretorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirCorretorActionPerformed
        excluirCorretor();
    }//GEN-LAST:event_btnExcluirCorretorActionPerformed

    private void btnAlteraCorretorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAlteraCorretorActionPerformed
        alterarCorretor();
    }//GEN-LAST:event_btnAlteraCorretorActionPerformed

    private void btnCadastraCorretorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCadastraCorretorActionPerformed
        cadastrarCorretor();
    }//GEN-LAST:event_btnCadastraCorretorActionPerformed

    private void txtRuaCorretorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtRuaCorretorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtRuaCorretorActionPerformed

    private void txtPesquisarCorretorKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPesquisarCorretorKeyReleased
        pesquisarCorretor();
    }//GEN-LAST:event_txtPesquisarCorretorKeyReleased

    private void tblCorretorMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblCorretorMouseClicked
        btnCadastraCorretor.setEnabled(false);
        btnAlteraCorretor.setEnabled(true);
        btnExcluirCorretor.setEnabled(true);
        setarCampos();
    }//GEN-LAST:event_tblCorretorMouseClicked

    private void btnLimparCorretorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimparCorretorActionPerformed
        limparCampos();
    }//GEN-LAST:event_btnLimparCorretorActionPerformed

    private void btnImprimeCorretorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnImprimeCorretorActionPerformed
        imprimeRelatorioCorretor();
    }//GEN-LAST:event_btnImprimeCorretorActionPerformed

    private void txtBairroCorretorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBairroCorretorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtBairroCorretorActionPerformed

    private void txtRgCorretorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtRgCorretorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtRgCorretorActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    protected javax.swing.JButton btnAlteraCorretor;
    protected javax.swing.JButton btnCadastraCorretor;
    protected javax.swing.JButton btnExcluirCorretor;
    protected javax.swing.JButton btnImprimeCorretor;
    private javax.swing.JButton btnLimparCorretor;
    private javax.swing.JComboBox<String> jCbUFcorretor;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel pnlDadosCorretor;
    private javax.swing.JPanel pnlEnderecoCorretor;
    private javax.swing.JPanel pnlMenuCorretor;
    private javax.swing.JTable tblCorretor;
    private javax.swing.JTextField txtBairroCorretor;
    private javax.swing.JFormattedTextField txtCelularCorretor;
    private javax.swing.JFormattedTextField txtCepCorretor;
    private javax.swing.JTextField txtCidadeCorretor;
    private javax.swing.JTextField txtCodCorretor;
    private javax.swing.JTextField txtComplementoCorretor;
    private javax.swing.JTextField txtContatoCorretor;
    private javax.swing.JFormattedTextField txtCpfCorretor;
    private javax.swing.JTextField txtEmailCorretor;
    private javax.swing.JTextField txtLoteCorretor;
    private javax.swing.JTextField txtNomeCorretor;
    private javax.swing.JTextField txtNumeroCorretor;
    private javax.swing.JTextField txtPesquisarCorretor;
    private javax.swing.JTextField txtQuadraCorretor;
    private javax.swing.JTextField txtRgCorretor;
    private javax.swing.JTextField txtRuaCorretor;
    private javax.swing.JFormattedTextField txtTelefoneCorretor;
    // End of variables declaration//GEN-END:variables

    private void cadastrarCorretor() {
        String sql = "INSERT INTO Corretor (nomeCorretor,telefoneCorretor,celularCorretor,cpfCorretor,rgCorretor,emailCorretor"
                + ",contatoCorretor,rua,quadra,lote,numero,bairro,complemento,cep,cidade,uf ) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)";
        try {
            pst = conexao.prepareStatement(sql);
            pst.setString(1, txtNomeCorretor.getText().toUpperCase());
            pst.setString(2, txtTelefoneCorretor.getText());
            pst.setString(3, txtCelularCorretor.getText());
            pst.setString(4, txtCpfCorretor.getText().toUpperCase());
            pst.setString(5, txtRgCorretor.getText().toUpperCase());
            pst.setString(6, txtEmailCorretor.getText().toLowerCase());
            pst.setString(7, txtContatoCorretor.getText().toUpperCase());
            pst.setString(8, txtRuaCorretor.getText().toUpperCase());
            pst.setString(9, txtQuadraCorretor.getText());
            pst.setString(10, txtLoteCorretor.getText());
            pst.setString(11, txtNumeroCorretor.getText());
            pst.setString(12, txtBairroCorretor.getText().toUpperCase());
            pst.setString(13, txtComplementoCorretor.getText().toUpperCase());
            pst.setString(14, txtCepCorretor.getText());
            pst.setString(15, txtCidadeCorretor.getText().toUpperCase());
            pst.setString(16, jCbUFcorretor.getSelectedItem().toString());
            // pst.setString(16, txtUFCorretor.getText());
            // validaçao dos campos obrigatórios
            if (txtNomeCorretor.getText().isEmpty()) {
                JOptionPane.showMessageDialog(null, "Campo Nome é Obrigatório!");
            } else if (txtCpfCorretor.getText().isEmpty()) {
                JOptionPane.showMessageDialog(null, "Campo CPF é Obrigatório!");
            } else if (txtRgCorretor.getText().isEmpty()) {
                JOptionPane.showMessageDialog(null, "Campo RG é Obrigatório!");
            } else if (txtRuaCorretor.getText().isEmpty()) {
                JOptionPane.showMessageDialog(null, "Campo RUA é Obrigatório!");
            } else if (txtQuadraCorretor.getText().isEmpty()) {
                JOptionPane.showMessageDialog(null, "Campo QUADRA é Obrigatório!");
            } else if (txtLoteCorretor.getText().isEmpty()) {
                JOptionPane.showMessageDialog(null, "Campo LOTE é Obrigatório!");
            } else if (txtBairroCorretor.getText().isEmpty()) {
                JOptionPane.showMessageDialog(null, "Campo BAIRRO é Obrigatório!");
            } else if (txtCepCorretor.getText().isEmpty()) {
                JOptionPane.showMessageDialog(null, "Campo CEP é Obrigatório!");
            } else if (txtCidadeCorretor.getText().isEmpty()) {
                JOptionPane.showMessageDialog(null, "Campo CIDADE é Obrigatório!");
            } else {
                int rowsAfected = pst.executeUpdate();

                if (rowsAfected > 0) {
                    JOptionPane.showMessageDialog(null, "Corretor cadastrado com sucesso!", "Cadastro", 1);

                    txtNomeCorretor.setText("");
                    txtTelefoneCorretor.setText("");
                    txtCelularCorretor.setText("");
                    txtCpfCorretor.setText("");
                    txtRgCorretor.setText("");
                    txtEmailCorretor.setText("");
                    txtContatoCorretor.setText("");
                    txtRuaCorretor.setText("");
                    txtQuadraCorretor.setText("");
                    txtLoteCorretor.setText("");
                    txtNumeroCorretor.setText("");
                    txtBairroCorretor.setText("");
                    txtComplementoCorretor.setText("");
                    txtCepCorretor.setText("");
                    txtCidadeCorretor.setText("");
                    jCbUFcorretor.setSelectedItem("GO");
                    txtNomeCorretor.requestFocus();
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }

    private void alterarCorretor() {
        int confirma = JOptionPane.showConfirmDialog(null, "Confirma a Alteracao de Corretor? " + txtNomeCorretor.getText(), "Atenção", JOptionPane.YES_NO_OPTION);
        //se confirmar for = YES_OPTION, o comando sql será executado, se txtUsuNom.getText(),
        //for Empty significa que não ha usuario com esse ID
        if (confirma == JOptionPane.YES_OPTION) {
//            Date anoCorrente = new Date();
//            SimpleDateFormat sdf = new SimpleDateFormat("ddMMyyyy");
//            String dataFormatada = sdf.format(anoCorrente);
            String sql = "update Corretor set nomeCorretor=?,telefoneCorretor=?,celularCorretor=?,cpfCorretor=?,rgCorretor=?,emailCorretor=?"
                    + ",contatoCorretor=?,rua=?,quadra=?,lote=?,numero=?,bairro=?,complemento=?,cep=?,cidade=?,uf=? where codCorretor=?";
            try {
                pst = conexao.prepareStatement(sql);
                pst.setString(1, txtNomeCorretor.getText().toUpperCase());
                pst.setString(2, txtTelefoneCorretor.getText());
                pst.setString(3, txtCelularCorretor.getText());
                pst.setString(4, txtCpfCorretor.getText().toUpperCase());
                pst.setString(5, txtRgCorretor.getText().toUpperCase());
                pst.setString(6, txtEmailCorretor.getText().toLowerCase());
                pst.setString(7, txtContatoCorretor.getText().toUpperCase());
                pst.setString(8, txtRuaCorretor.getText().toUpperCase());
                pst.setString(9, txtQuadraCorretor.getText().toUpperCase());
                pst.setString(10, txtLoteCorretor.getText());
                pst.setString(11, txtNumeroCorretor.getText());
                pst.setString(12, txtBairroCorretor.getText().toUpperCase());
                pst.setString(13, txtComplementoCorretor.getText().toUpperCase());
                pst.setString(14, txtCepCorretor.getText());
                pst.setString(15, txtCidadeCorretor.getText().toUpperCase());
                pst.setString(16, jCbUFcorretor.getSelectedItem().toString());
                pst.setString(17, txtCodCorretor.getText());
                // validaçao dos campos obrigatórios
                if (txtNomeCorretor.getText().isEmpty()) {
                    JOptionPane.showMessageDialog(null, "Campo Nome é Obrigatório!");
                } else if (txtCpfCorretor.getText().isEmpty()) {
                    JOptionPane.showMessageDialog(null, "Campo CPF é Obrigatório!");
                } else if (txtRgCorretor.getText().isEmpty()) {
                    JOptionPane.showMessageDialog(null, "Campo RG é Obrigatório!");
                } else if (txtRuaCorretor.getText().isEmpty()) {
                    JOptionPane.showMessageDialog(null, "Campo RUA é Obrigatório!");
                } else if (txtQuadraCorretor.getText().isEmpty()) {
                    JOptionPane.showMessageDialog(null, "Campo QUADRA é Obrigatório!");
                } else if (txtLoteCorretor.getText().isEmpty()) {
                    JOptionPane.showMessageDialog(null, "Campo LOTE é Obrigatório!");
                } else if (txtBairroCorretor.getText().isEmpty()) {
                    JOptionPane.showMessageDialog(null, "Campo BAIRRO é Obrigatório!");
                } else if (txtCepCorretor.getText().isEmpty()) {
                    JOptionPane.showMessageDialog(null, "Campo CEP é Obrigatório!");
                } else if (txtCidadeCorretor.getText().isEmpty()) {
                    JOptionPane.showMessageDialog(null, "Campo CIDADE é Obrigatório!");
                } else {
                    int rowsAfected = pst.executeUpdate();

                    if (rowsAfected > 0) {
                        JOptionPane.showMessageDialog(null, "Corretor Alterado com Sucesso!");
                        btnCadastraCorretor.setEnabled(true);
                        btnAlteraCorretor.setEnabled(false);
                        btnExcluirCorretor.setEnabled(false);
                        // O SELECT abaixoa seta a tabela com valores vazios
                        String sql2 = "select * from Corretor where nomeCorretor = 'XXXX' ";
                        try {
                            pst = conexao.prepareStatement(sql2);
                            rs = pst.executeQuery();
                            tblCorretor.setModel(DbUtils.resultSetToTableModel(rs));
                            tblCorretor.isValid();

                        } catch (Exception e) {
                            JOptionPane.showMessageDialog(null, e);
                        }

                        txtNomeCorretor.setText("");
                        txtTelefoneCorretor.setText("");
                        txtCelularCorretor.setText("");
                        txtCpfCorretor.setText("");
                        txtRgCorretor.setText("");
                        txtEmailCorretor.setText("");
                        txtContatoCorretor.setText("");
                        txtRuaCorretor.setText("");
                        txtQuadraCorretor.setText("");
                        txtLoteCorretor.setText("");
                        txtNumeroCorretor.setText("");
                        txtBairroCorretor.setText("");
                        txtComplementoCorretor.setText("");
                        txtCepCorretor.setText("");
                        txtCidadeCorretor.setText("");
                        jCbUFcorretor.setSelectedItem("GO");
                        txtNomeCorretor.requestFocus();

                    }
                }

            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, e);
            }
        }
    }

//    private void limparCorretor() {
//        String sql = "select * from entrada where descEntrada = 'xx'";
//        try {
//            pst = conexao.prepareStatement(sql);
//            //    pst.setString(1, "%" + txtPesquisaentrada.getText() + "%");
//            rs = pst.executeQuery();
//            tblEntrada.setModel(DbUtils.resultSetToTableModel(rs));
//        } catch (Exception e) {
//            JOptionPane.showMessageDialog(null, e);
//        }
//    }
    private void pesquisarCorretor() {
        String sql = "select * from Corretor where nomeCorretor LIKE ? order by codCorretor desc";
        try {
            pst = conexao.prepareStatement(sql);
            pst.setString(1, "%" + txtPesquisarCorretor.getText() + "%");
            rs = pst.executeQuery();
            tblCorretor.setModel(DbUtils.resultSetToTableModel(rs));
            tblCorretor.isValid();

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }

    private void setarCampos() {
        int setar = tblCorretor.getSelectedRow();
        txtCodCorretor.setText(tblCorretor.getModel().getValueAt(setar, 0).toString());
        txtNomeCorretor.setText(tblCorretor.getModel().getValueAt(setar, 1).toString());
        txtTelefoneCorretor.setText(tblCorretor.getModel().getValueAt(setar, 2).toString());
        txtCelularCorretor.setText(tblCorretor.getModel().getValueAt(setar, 3).toString());
        txtCpfCorretor.setText(tblCorretor.getModel().getValueAt(setar, 4).toString());
        txtRgCorretor.setText(tblCorretor.getModel().getValueAt(setar, 5).toString());
        txtEmailCorretor.setText(tblCorretor.getModel().getValueAt(setar, 6).toString());
        txtContatoCorretor.setText(tblCorretor.getModel().getValueAt(setar, 7).toString());
        txtRuaCorretor.setText(tblCorretor.getModel().getValueAt(setar, 8).toString());
        txtQuadraCorretor.setText(tblCorretor.getModel().getValueAt(setar, 9).toString());
        txtLoteCorretor.setText(tblCorretor.getModel().getValueAt(setar, 10).toString());
        txtNumeroCorretor.setText(tblCorretor.getModel().getValueAt(setar, 11).toString());
        txtBairroCorretor.setText(tblCorretor.getModel().getValueAt(setar, 12).toString());
        txtComplementoCorretor.setText(tblCorretor.getModel().getValueAt(setar, 13).toString());
        txtCepCorretor.setText(tblCorretor.getModel().getValueAt(setar, 14).toString());
        txtCidadeCorretor.setText(tblCorretor.getModel().getValueAt(setar, 15).toString());
        jCbUFcorretor.setSelectedItem(tblCorretor.getModel().getValueAt(setar, 16).toString());
        txtPesquisarCorretor.requestFocus();
    }

    private void limparCampos() {
        btnCadastraCorretor.setEnabled(true);
        btnAlteraCorretor.setEnabled(false);
        btnExcluirCorretor.setEnabled(false);
        txtNomeCorretor.setText("");
        txtTelefoneCorretor.setText("");
        txtCelularCorretor.setText("");
        txtCpfCorretor.setText("");
        txtRgCorretor.setText("");
        txtEmailCorretor.setText("");
        txtContatoCorretor.setText("");
        txtRuaCorretor.setText("");
        txtQuadraCorretor.setText("");
        txtLoteCorretor.setText("");
        txtNumeroCorretor.setText("");
        txtBairroCorretor.setText("");
        txtComplementoCorretor.setText("");
        txtCepCorretor.setText("");
        txtCidadeCorretor.setText("");
        jCbUFcorretor.setSelectedItem("GO");
        txtCodCorretor.setText("");
        txtNomeCorretor.requestFocus();
        String sql2 = "select * from Corretor where nomeCorretor = 'XXXX' ";
        try {
            pst = conexao.prepareStatement(sql2);
            rs = pst.executeQuery();
            tblCorretor.setModel(DbUtils.resultSetToTableModel(rs));
            tblCorretor.isValid();

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }

    }

    private void excluirCorretor() {
        int confirma = JOptionPane.showConfirmDialog(null, "Confirma a remoção do Corretor? " + txtNomeCorretor.getText(), "Atenção", JOptionPane.YES_NO_OPTION);
        //se confirmar for = YES_OPTION, o comando sql será executado, se txtUsuNom.getText(),
        //for Empty significa que não ha usuario com esse ID
        if (confirma == JOptionPane.YES_OPTION) {
            String sql = "delete from Corretor where codCorretor = ?";
            try {
                pst = conexao.prepareStatement(sql);
                pst.setString(1, txtCodCorretor.getText());
                int rowsAffected = pst.executeUpdate();
                JOptionPane.showMessageDialog(null, "Corretor removido com Sucesso!");
                btnAlteraCorretor.setEnabled(false);
                btnExcluirCorretor.setEnabled(false);
                txtNomeCorretor.setText("");
                txtTelefoneCorretor.setText("");
                txtCelularCorretor.setText("");
                txtCpfCorretor.setText("");
                txtRgCorretor.setText("");
                txtEmailCorretor.setText("");
                txtContatoCorretor.setText("");
                txtRuaCorretor.setText("");
                txtQuadraCorretor.setText("");
                txtLoteCorretor.setText("");
                txtBairroCorretor.setText("");
                txtComplementoCorretor.setText("");
                txtCepCorretor.setText("");
                txtCidadeCorretor.setText("");
                jCbUFcorretor.setSelectedItem("GO");
                txtCodCorretor.setText("");
                txtNomeCorretor.requestFocus();
                btnCadastraCorretor.setEnabled(true);
                btnAlteraCorretor.setEnabled(false);
                btnExcluirCorretor.setEnabled(false);
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, e);
            }
        }
    }

    private void imprimeRelatorioCorretor() {
        try {
            //Usando a classe JasperPrint para preparar a impressao de um relatorio, o caminho pode ser usado '/' ou '\\'
            JasperPrint print = JasperFillManager.fillReport("C:\\imobsys\\relatorios\\relatorioCorretores.jasper", null, conexao);
            //a linha abaixo exibe o relatorio através da classe JasperViewer
            JasperViewer.viewReport(print, false);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }
}
