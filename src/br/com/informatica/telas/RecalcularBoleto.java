/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.com.informatica.telas;

import br.com.informatica.dal.Conexao;
import br.com.informatica.util.CalcularBoletoDialog;
import br.com.informatica.util.Feriado;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.DecimalFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.Scanner;
import java.util.concurrent.TimeUnit;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author edilson
 */
public class RecalcularBoleto extends javax.swing.JInternalFrame {

    PreparedStatement pst = null;
    Connection conexao = null;
    ResultSet rs = null;
    static String dataStr, dataNovaStr, dataPagStr, dataVencStr, diaDaSemanaStr, dataCompletaStr, dataNova;
    static long a, b, quantDiasAtraso;
    static List<Feriado> feriados = new ArrayList();
    static Date dataVencDate;
    static double multa, valTaxa;

    public RecalcularBoleto() {
   //    setarVencidos();
        initComponents();
        
        try {
            if (!jTexPesqCodBoleto.getText().isEmpty()) {
                btnPesquisarCodBoleto.setEnabled(false);
            }
            conexao = Conexao.conector;

            SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
            Date dataAtual = new Date();
            String dataPagDate = sdf.format(dataAtual);
            jDateDataPag.setDate(sdf.parse(dataPagDate));

        } catch (ParseException ex) {
            JOptionPane.showMessageDialog(null, ex);
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        calendarUtils1 = new org.jdesktop.swingx.calendar.CalendarUtils();
        pnlGerarBoleto = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jBtGerar = new javax.swing.JButton();
        jDateDataVencimento = new com.toedter.calendar.JDateChooser();
        jDateDataPag = new com.toedter.calendar.JDateChooser();
        jLabel4 = new javax.swing.JLabel();
        jTextPagador = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jTextCPF = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jTextTelef = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jTextQuadra = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jTextLote = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jTextLoteamento = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jTextCidade = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jTextValorIntegral = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jTextTxJuro = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jTextMulta = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jTextValorTotal = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        jTextQuantPrestacao = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        jTextStatus = new javax.swing.JTextField();
        jTextCodBoleto = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jTextDiasAtraso = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        jTextRua = new javax.swing.JTextField();
        jLabel22 = new javax.swing.JLabel();
        jTextCarne = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        jPanel1 = new javax.swing.JPanel();
        jButtonAdcionar = new javax.swing.JButton();
        jButtonAlterar = new javax.swing.JButton();
        jButtonDeletar = new javax.swing.JButton();
        jButtonLimpar = new javax.swing.JButton();
        jButtonImprimir = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel19 = new javax.swing.JLabel();
        jTexPesqCodBoleto = new javax.swing.JTextField();
        btnPesquisarCodBoleto = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jBtSetarCampos = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JSeparator();
        jButton1 = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setTitle("Recalcular Boletos");

        pnlGerarBoleto.setBackground(new java.awt.Color(204, 240, 240));

        jLabel1.setText("DtVenc");

        jLabel2.setText("DtPag");

        jBtGerar.setText("Calcular");
        jBtGerar.setEnabled(false);
        jBtGerar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtGerarActionPerformed(evt);
            }
        });

        jLabel4.setText("Pagador");

        jTextPagador.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextPagadorKeyPressed(evt);
            }
        });

        jLabel5.setText("CPF");

        jLabel6.setText("Telef");

        jLabel8.setText("Quad");

        jLabel9.setText("Lote");

        jLabel10.setText("Loteamento");

        jLabel11.setText("Cidade");

        jLabel12.setText("Valor Prest");

        jLabel13.setText("TX juros");

        jTextTxJuro.setEnabled(false);

        jLabel14.setText("Multa");

        jTextMulta.setEnabled(false);
        jTextMulta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextMultaActionPerformed(evt);
            }
        });

        jLabel15.setText("Valor Tot");

        jTextValorTotal.setEnabled(false);

        jLabel16.setText("Quant Prest");

        jTextQuantPrestacao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextQuantPrestacaoActionPerformed(evt);
            }
        });

        jLabel17.setText("Status");

        jTextCodBoleto.setEnabled(false);

        jLabel18.setText("Cod Boleto");

        jLabel20.setText("Dias Atraso");

        jLabel21.setText("Rua");

        jLabel22.setText("CN");

        jPanel1.setLayout(new java.awt.GridLayout(1, 0));

        jButtonAdcionar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/informatica/icones/create.png"))); // NOI18N
        jButtonAdcionar.setToolTipText("Adcionar");
        jButtonAdcionar.setEnabled(false);
        jPanel1.add(jButtonAdcionar);

        jButtonAlterar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/informatica/icones/alterar_registro.png"))); // NOI18N
        jButtonAlterar.setToolTipText("Alterar");
        jButtonAlterar.setEnabled(false);
        jButtonAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAlterarActionPerformed(evt);
            }
        });
        jPanel1.add(jButtonAlterar);

        jButtonDeletar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/informatica/icones/delete.png"))); // NOI18N
        jButtonDeletar.setToolTipText("Deletar");
        jButtonDeletar.setEnabled(false);
        jPanel1.add(jButtonDeletar);

        jButtonLimpar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/informatica/icones/clear.png"))); // NOI18N
        jButtonLimpar.setToolTipText("Limpar");
        jButtonLimpar.setEnabled(false);
        jPanel1.add(jButtonLimpar);

        jButtonImprimir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/informatica/icones/impressora2.png"))); // NOI18N
        jButtonImprimir.setToolTipText("Relatorio");
        jPanel1.add(jButtonImprimir);

        jPanel2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel19.setText("Cod Boleto");

        jTexPesqCodBoleto.setToolTipText("Digite o Código do boleto ou clique na Lupa");

        btnPesquisarCodBoleto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/informatica/icones/search_client.png"))); // NOI18N
        btnPesquisarCodBoleto.setToolTipText("Busca o código do boleto a ser calculado");
        btnPesquisarCodBoleto.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnPesquisarCodBoleto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPesquisarCodBoletoActionPerformed(evt);
            }
        });

        jLabel3.setText("Mostrar Boleto");

        jBtSetarCampos.setText("Mostrar");
        jBtSetarCampos.setEnabled(false);
        jBtSetarCampos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtSetarCamposActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jBtSetarCampos)
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addComponent(jLabel19)
                            .addGap(18, 18, 18)
                            .addComponent(jTexPesqCodBoleto, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(btnPesquisarCodBoleto, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(40, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnPesquisarCodBoleto)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel19)
                        .addComponent(jTexPesqCodBoleto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(38, 38, 38)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBtSetarCampos)
                    .addComponent(jLabel3))
                .addContainerGap(45, Short.MAX_VALUE))
        );

        jSeparator2.setOrientation(javax.swing.SwingConstants.VERTICAL);

        jButton1.setText("atualiza");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlGerarBoletoLayout = new javax.swing.GroupLayout(pnlGerarBoleto);
        pnlGerarBoleto.setLayout(pnlGerarBoletoLayout);
        pnlGerarBoletoLayout.setHorizontalGroup(
            pnlGerarBoletoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlGerarBoletoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlGerarBoletoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlGerarBoletoLayout.createSequentialGroup()
                        .addComponent(jLabel18)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextCodBoleto, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(35, 35, 35)
                        .addComponent(jLabel17)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jTextStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel22)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jTextCarne, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(pnlGerarBoletoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlGerarBoletoLayout.createSequentialGroup()
                                .addComponent(jLabel11)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jTextCidade, javax.swing.GroupLayout.PREFERRED_SIZE, 284, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(pnlGerarBoletoLayout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jTextCPF, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jTextTelef, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(pnlGerarBoletoLayout.createSequentialGroup()
                        .addGroup(pnlGerarBoletoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlGerarBoletoLayout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jDateDataVencimento, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(pnlGerarBoletoLayout.createSequentialGroup()
                                .addGap(196, 196, 196)
                                .addGroup(pnlGerarBoletoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(pnlGerarBoletoLayout.createSequentialGroup()
                                        .addComponent(jLabel2)
                                        .addGap(18, 18, 18)
                                        .addComponent(jDateDataPag, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pnlGerarBoletoLayout.createSequentialGroup()
                                        .addComponent(jLabel16)
                                        .addGap(18, 18, 18)
                                        .addComponent(jTextQuantPrestacao, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addGap(18, 18, 18)
                        .addComponent(jLabel20)
                        .addGap(20, 20, 20)
                        .addComponent(jTextDiasAtraso))
                    .addGroup(pnlGerarBoletoLayout.createSequentialGroup()
                        .addComponent(jLabel12)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jTextValorIntegral, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel13)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jTextTxJuro, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel14)
                        .addGap(18, 18, 18)
                        .addComponent(jTextMulta, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(pnlGerarBoletoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlGerarBoletoLayout.createSequentialGroup()
                                .addComponent(jLabel15)
                                .addGap(153, 153, 153))
                            .addGroup(pnlGerarBoletoLayout.createSequentialGroup()
                                .addGap(75, 75, 75)
                                .addComponent(jTextValorTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(pnlGerarBoletoLayout.createSequentialGroup()
                        .addGroup(pnlGerarBoletoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlGerarBoletoLayout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(10, 10, 10)
                                .addComponent(jTextPagador, javax.swing.GroupLayout.PREFERRED_SIZE, 532, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(pnlGerarBoletoLayout.createSequentialGroup()
                                .addGap(50, 50, 50)
                                .addComponent(jTextRua, javax.swing.GroupLayout.PREFERRED_SIZE, 364, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jTextQuadra, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel9)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jTextLote, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel10))
                            .addComponent(jLabel21)
                            .addComponent(jBtGerar)
                            .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 521, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jTextLoteamento, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlGerarBoletoLayout.createSequentialGroup()
                        .addGroup(pnlGerarBoletoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 487, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(35, 35, 35)
                        .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton1)
                        .addGap(133, 133, 133)))
                .addContainerGap())
        );
        pnlGerarBoletoLayout.setVerticalGroup(
            pnlGerarBoletoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlGerarBoletoLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(pnlGerarBoletoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(pnlGerarBoletoLayout.createSequentialGroup()
                        .addGroup(pnlGerarBoletoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel18)
                            .addComponent(jTextCodBoleto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel17)
                            .addComponent(jTextStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel22)
                            .addComponent(jTextCarne, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel11)
                            .addComponent(jTextCidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(pnlGerarBoletoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(jTextPagador, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5)
                            .addComponent(jTextCPF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6)
                            .addComponent(jTextTelef, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(pnlGerarBoletoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(jTextQuadra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9)
                            .addComponent(jTextLote, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10)
                            .addComponent(jTextLoteamento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel21)
                            .addComponent(jTextRua, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(26, 26, 26)
                        .addGroup(pnlGerarBoletoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlGerarBoletoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel12)
                                .addComponent(jTextValorIntegral, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel16)
                                .addComponent(jTextQuantPrestacao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(pnlGerarBoletoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jTextValorTotal, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(pnlGerarBoletoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel15)
                                    .addComponent(jTextMulta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel14)
                                    .addComponent(jTextTxJuro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel13))))
                        .addGap(18, 18, 18)
                        .addGroup(pnlGerarBoletoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1)
                            .addComponent(jDateDataPag, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jDateDataVencimento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(pnlGerarBoletoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel20)
                        .addComponent(jTextDiasAtraso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(jBtGerar)
                .addGap(18, 18, 18)
                .addGroup(pnlGerarBoletoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlGerarBoletoLayout.createSequentialGroup()
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(pnlGerarBoletoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlGerarBoletoLayout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 34, Short.MAX_VALUE)
                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(pnlGerarBoletoLayout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addComponent(jButton1)
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addComponent(jSeparator2))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlGerarBoleto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(pnlGerarBoleto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        setBounds(0, 0, 970, 610);
    }// </editor-fold>//GEN-END:initComponents

    private void btnPesquisarCodBoletoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPesquisarCodBoletoActionPerformed
        CalcularBoletoDialog boletoDialog = new CalcularBoletoDialog(null, true);
        boletoDialog.setVisible(true);
        jTexPesqCodBoleto.setText(boletoDialog.getCodigo());
        jBtSetarCampos.setEnabled(true);

    }//GEN-LAST:event_btnPesquisarCodBoletoActionPerformed

    private void jBtSetarCamposActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtSetarCamposActionPerformed
        buscarBoleto();
    }//GEN-LAST:event_jBtSetarCamposActionPerformed

    private void jTextQuantPrestacaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextQuantPrestacaoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextQuantPrestacaoActionPerformed

    private void jTextMultaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextMultaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextMultaActionPerformed

    private void jTextPagadorKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextPagadorKeyPressed
        if (jTexPesqCodBoleto.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Digite o código Boleto abaixo e \nclique em buscar para preencher os dados!", "", 1);
        }
    }//GEN-LAST:event_jTextPagadorKeyPressed

    private void jBtGerarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtGerarActionPerformed
        buscarFeriado();
        //     compararVencimentos();
        calcularQuantDias();
        jButtonAdcionar.setEnabled(true);
        jButtonAlterar.setEnabled(true);
        jButtonDeletar.setEnabled(true);
        jButtonLimpar.setEnabled(true);

        //      gerarBoleto();
        // inseriTeste();
    }//GEN-LAST:event_jBtGerarActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        atualizaVencimentos();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButtonAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAlterarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButtonAlterarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    public static javax.swing.JButton btnPesquisarCodBoleto;
    private org.jdesktop.swingx.calendar.CalendarUtils calendarUtils1;
    private javax.swing.JButton jBtGerar;
    public static javax.swing.JButton jBtSetarCampos;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButtonAdcionar;
    private javax.swing.JButton jButtonAlterar;
    private javax.swing.JButton jButtonDeletar;
    private javax.swing.JButton jButtonImprimir;
    private javax.swing.JButton jButtonLimpar;
    private com.toedter.calendar.JDateChooser jDateDataPag;
    private com.toedter.calendar.JDateChooser jDateDataVencimento;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTextField jTexPesqCodBoleto;
    private javax.swing.JTextField jTextCPF;
    private javax.swing.JTextField jTextCarne;
    private javax.swing.JTextField jTextCidade;
    private javax.swing.JTextField jTextCodBoleto;
    private javax.swing.JTextField jTextDiasAtraso;
    private javax.swing.JTextField jTextLote;
    private javax.swing.JTextField jTextLoteamento;
    private javax.swing.JTextField jTextMulta;
    private javax.swing.JTextField jTextPagador;
    private javax.swing.JTextField jTextQuadra;
    private javax.swing.JTextField jTextQuantPrestacao;
    private javax.swing.JTextField jTextRua;
    private javax.swing.JTextField jTextStatus;
    private javax.swing.JTextField jTextTelef;
    private javax.swing.JTextField jTextTxJuro;
    private javax.swing.JTextField jTextValorIntegral;
    private javax.swing.JTextField jTextValorTotal;
    private javax.swing.JPanel pnlGerarBoleto;
    // End of variables declaration//GEN-END:variables

    private void buscarBoleto() {
        //      feriados.add("20191110");
        if (jTexPesqCodBoleto.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Digite o código do Boleto a ser Pesquisado");

        } else {
            String sql = "select * from boleto where codBoleto = ?";
            try {

                pst = conexao.prepareStatement(sql);
                pst.setString(1, jTexPesqCodBoleto.getText());
                rs = pst.executeQuery();
                if (rs.next()) {
                    dataVencStr = rs.getString(17);

                    Date dataVencDate = new SimpleDateFormat("yyyy-MM-dd").parse(dataVencStr);
                    dataCompletaStr = String.valueOf(dataVencDate);//DATA COMPLETA - Tue Sep 10 00:00:00 BRT 2019
                    diaDaSemanaStr = dataCompletaStr.substring(0, 3);//DIA DA SEMANA - Tue
                    String codBoleto = rs.getString(1);

                    jTextCodBoleto.setText(rs.getString(1));

                    jTextStatus.setText(rs.getString(2));
                    jTextCarne.setText(rs.getString(3));
                    jTextQuantPrestacao.setText(rs.getString(4));
                    jTextPagador.setText(rs.getString(5));
                    jTextTelef.setText(rs.getString(6));
                    jTextCPF.setText(rs.getString(7));
                    jTextRua.setText(rs.getString(8));
                    jTextQuadra.setText(rs.getString(9));
                    jTextLote.setText(rs.getString(10));
                    jTextLoteamento.setText(rs.getString(11));
                    jTextCidade.setText(rs.getString(12));
                    jTextValorIntegral.setText(rs.getString(13));
                    jTextTxJuro.setText(rs.getString(14));
                    jTextMulta.setText(rs.getString(15));
                    jTextValorTotal.setText(rs.getString(16));
                    jDateDataVencimento.setDate(rs.getDate(17));

                    dataVencStr = "";
                    dataPagStr = "";
                    //  SimpleDateFormat sdf = new SimpleDateFormat("yyyyMMdd");
                    SimpleDateFormat sdf = new SimpleDateFormat("ddMMyyyy");

                    java.util.Date receDataPag = jDateDataPag.getDate();
                    System.out.println("Date da classe boleto " + receDataPag);
                    java.util.Date receDataVenc = jDateDataVencimento.getDate();
                    //  JOptionPane.showMessageDialog(null, "dataVence ", receDataVenc.toString(), 1);
                    String dataPagStrg = "";
                    dataVencStr = "";

                    dataPagStrg = sdf.format(receDataPag);//FORMATANDO UM DATE E COLOCANDO EM UMA STRING
                    System.out.println("dataPagStrg " + dataPagStrg);
                    Date dateDataPag = sdf.parse(dataPagStrg);//PASSANDO A STRING DE VOLTA PARA DATE
                    dataVencStr = sdf.format(receDataVenc);//FORMATANDO UM DATE E COLOCANDO EM UMA STRING
                    System.out.println("dataVencStr " + dataVencStr);
                    Date dateDataVenc = sdf.parse(dataVencStr);//PASSANDO A STRING DE VOLTA PARA DATE
                    long quantDias = (dateDataPag.getTime() - dateDataVenc.getTime());
                    long comparacao = (dateDataPag.compareTo(dateDataVenc));
                    //  JOptionPane.showMessageDialog(null, comparacao,"COMPARACAO",1);
                    quantDiasAtraso = TimeUnit.DAYS.convert(quantDias, TimeUnit.MILLISECONDS);

                    jTextDiasAtraso.setText(String.valueOf(quantDiasAtraso));

                } else {
                    JOptionPane.showMessageDialog(null, "Esse codigo não exite!");
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, e);
            }
        }
        jBtGerar.setEnabled(true);
    }

    private void calcularQuantDias() {

        DecimalFormat df = new DecimalFormat("#.00");
        try {
            String dataVencStr = "";
            String dataPagStr = "";
            //  SimpleDateFormat sdf = new SimpleDateFormat("yyyyMMdd");
            SimpleDateFormat sdf = new SimpleDateFormat("ddMMyyyy");

            java.util.Date receDataPag = jDateDataPag.getDate();
            //   JOptionPane.showMessageDialog(null, "receDataPag :", receDataPag.toString(), 1);
            System.out.println("Date da classe boleto " + receDataPag);
            java.util.Date receDataVenc = jDateDataVencimento.getDate();
            String dataPagStrg = "";
            dataVencStr = "";

            dataPagStrg = sdf.format(receDataPag);//FORMATANDO UM DATE E COLOCANDO EM UMA STRING
            System.out.println("dataPagStrg " + dataPagStrg);
            Date dateDataPag = sdf.parse(dataPagStrg);//PASSANDO A STRING DE VOLTA PARA DATE
            dataVencStr = sdf.format(receDataVenc);//FORMATANDO UM DATE E COLOCANDO EM UMA STRING
            System.out.println("dataVencStr " + dataVencStr);
            Date dateDataVenc = sdf.parse(dataVencStr);//PASSANDO A STRING DE VOLTA PARA DATE
            long quantDias = (dateDataPag.getTime() - dateDataVenc.getTime());
//            long comparacao = (dateDataPag.compareTo(dateDataVenc));
//            JOptionPane.showMessageDialog(null, comparacao, "COMPARACAO", 1);
            long quantDiasAtraso = TimeUnit.DAYS.convert(quantDias, TimeUnit.MILLISECONDS);
            System.out.println("QUANTIDADE DE DIAS DE ATRASO: " + quantDiasAtraso);
            jTextDiasAtraso.setText(String.valueOf(quantDiasAtraso));
            int diasAtrasoInteiro = Integer.parseInt(jTextDiasAtraso.getText());
            //   JOptionPane.showMessageDialog(null, diasAtrasoInteiro,"diasAtrasoInteiro",1);

            double valorIntegral = Double.parseDouble(jTextValorIntegral.getText());
            // JOptionPane.showMessageDialog(null, valorIntegral,"Valor INTEGRAL",1);
            if (quantDiasAtraso <= 0) {
                multa = 0;
                valTaxa = 0;
            } else {
                multa = valorIntegral * 2 / 100;
                valTaxa = 0.034;
            }

            //   JOptionPane.showMessageDialog(null, multa,"MULTAA",1);
            //    double taxaAcumulada = valTaxa++;
            double valorAcumulado = (valorIntegral * Math.pow((1 + valTaxa / 100), diasAtrasoInteiro));
            double taxaJuro = (valorAcumulado - valorIntegral);
            // taxaJuro *=(100);

            //   JOptionPane.showMessageDialog(null, valorAcumulado,"Valor acumulado",1);
            //  JOptionPane.showMessageDialog(null, taxaJuro,"TAXA DE JUROS",1);
            jTextMulta.setText(String.valueOf(multa));
            jTextTxJuro.setText(String.valueOf(df.format(taxaJuro)));
            double somaTotal = valorIntegral + multa + taxaJuro;
            //  JOptionPane.showMessageDialog(null, somaTotal,"Soma total",1);
            jTextValorTotal.setText(String.valueOf(df.format(somaTotal)));
            /////////////////////////////////////////////////
        } catch (ParseException ex) {
            Logger.getLogger(GerarBoleto.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public void buscarFeriado() {
        String sql = "select * from feriados";

        try {
//              List<String> feriados = new ArrayList();

            pst = conexao.prepareStatement(sql);
            rs = pst.executeQuery();

            while (rs.next()) {
                Feriado feri = new Feriado();
                feri.setId(rs.getInt(1));
                feri.setData(rs.getString(2));
                feri.setDescricao(rs.getString(3));
                feri.setAno(rs.getString(4));
                //apos setar o objeto agenda como todos os campos da tabela agendacompromisso,o objeto agenda e adicionado a listaAgenda
                feriados.add(feri);

            }

            for (Feriado dataFeriado : feriados) {

                String dataStr = dataFeriado.getData();
                String anoStr = dataStr.substring(0, 4);
                String mesStr = dataStr.substring(5, 7);
                String diaStr = dataStr.substring(8);
                dataCompletaStr = anoStr + "-" + mesStr + "-" + diaStr;
                System.out.println("Data FEriado " + dataCompletaStr);
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro da lista");
        }
        compararVencimentos();
        //  JOptionPane.showMessageDialog(null, "diaDaSemanaStr primeiro dentro \ndo buscar feriado ", diaDaSemanaStr, 1);

    }

    public void compararVencimentos() {
        try {
            if (diaDaSemanaStr.equals("Sat")) {
                //   if (diaDaSemanaStr.equals("Tue")) {

                dataVencDate = jDateDataVencimento.getDate();

                a = dataVencDate.getTime();
                a = a + 172800000;
                dataVencDate = new Date(a);
                dataVencStr = String.valueOf(dataVencDate);
                // JOptionPane.showMessageDialog(null, "dataVencStr 2 ", dataVencStr, 1);
                // dataNova = new SimpleDateFormat("yyyyMMdd").format(dataVencDate);
                String dataNova = new SimpleDateFormat("yyyy-MM-dd").format(dataVencDate);
                jDateDataVencimento.setDate(dataVencDate);
                // JOptionPane.showMessageDialog(null, "dia data Nova ", dataNova, 1);
                diaDaSemanaStr = dataVencStr.substring(0, 3);
                for (Feriado feriado : feriados) {
                    String dataStr = feriado.getData();
                    if (dataStr.equals(dataNova)) {
                        a = dataVencDate.getTime();
                        a = a + 86400000;
                        dataVencDate = new Date(a);
                        dataVencStr = String.valueOf(dataVencDate);
                        // JOptionPane.showMessageDialog(null, "dataVencStr 2 ", dataVencStr, 1);
                        dataNova = new SimpleDateFormat("yyyy-MM-dd").format(dataVencDate);
                        jDateDataVencimento.setDate(dataVencDate);
                        // JOptionPane.showMessageDialog(null, "dia data Nova ", dataNova, 1);
                        diaDaSemanaStr = dataVencStr.substring(0, 3);
                    }
                }
                dataNova = new SimpleDateFormat("yyyy-MM-dd").format(dataVencDate);
                jDateDataVencimento.setDate(dataVencDate);
            }
            if (diaDaSemanaStr.equals("Sun")) {
                //   if (diaDaSemanaStr.equals("Tue")) {

                dataVencDate = jDateDataVencimento.getDate();

                a = dataVencDate.getTime();
                a = a + 86400000;
                dataVencDate = new Date(a);
                dataVencStr = String.valueOf(dataVencDate);
                // JOptionPane.showMessageDialog(null, "dataVencStr 2 ", dataVencStr, 1);
                // dataNova = new SimpleDateFormat("yyyyMMdd").format(dataVencDate);
                String dataNova = new SimpleDateFormat("yyyy-MM-dd").format(dataVencDate);
                jDateDataVencimento.setDate(dataVencDate);
                // JOptionPane.showMessageDialog(null, "dia data Nova domingo ", dataNova, 1);
                diaDaSemanaStr = dataVencStr.substring(0, 3);
                for (Feriado feriado : feriados) {
                    String dataStr = feriado.getData();
//                    JOptionPane.showMessageDialog(null, "formato do feriado domingo ", dataStr.toString(), 1);
//                    JOptionPane.showMessageDialog(null, "formato do dataNova ", dataNova, 1);
                    if (dataStr.equals(dataNova)) {
                        a = dataVencDate.getTime();
                        a = a + 86400000;
                        dataVencDate = new Date(a);
                        dataVencStr = String.valueOf(dataVencDate);
                        //  JOptionPane.showMessageDialog(null, "dataVencStr 2 ", dataVencStr, 1);
                        dataNova = new SimpleDateFormat("yyyy-MM-dd").format(dataVencDate);
                        jDateDataVencimento.setDate(dataVencDate);
                        //    JOptionPane.showMessageDialog(null, "dia data Nova ", dataNova, 1);
                        diaDaSemanaStr = dataVencStr.substring(0, 3);
                        //    break;
                    }
                }
                dataNova = new SimpleDateFormat("yyyy-MM-dd").format(dataVencDate);
                jDateDataVencimento.setDate(dataVencDate);

            }
            //   JOptionPane.showMessageDialog(null, "diaDaSemanaStr segundo if ", diaDaSemanaStr, 1);
            dataNova = new SimpleDateFormat("yyyyMMdd").format(dataVencDate);
            jDateDataVencimento.setDate(dataVencDate);

            Date dataNovaVencDate = jDateDataVencimento.getDate();
            dataNova = new SimpleDateFormat("yyyy-MM-dd").format(dataNovaVencDate);
            //  JOptionPane.showMessageDialog(null, "dataNovaVencDate ", dataNovaVencDate.toString(), 1);
            for (Feriado feriado : feriados) {
                String dataStr = feriado.getData();
                if (dataStr.equals(dataNova)) {//verificando feriado sozinho

                    //   JOptionPane.showMessageDialog(null, "DATA NOVA ANTES DO FERIADO SOZINHO 2 ", dataNova, 1);
                    a = dataVencDate.getTime();
                    a = a + 86400000;
                    dataVencDate = new Date(a);
                    dataVencStr = String.valueOf(dataVencDate);
                    //  JOptionPane.showMessageDialog(null, "dataVencStr 2 ", dataVencStr, 1);
                    dataNova = new SimpleDateFormat("yyyy-MM-dd").format(dataVencDate);
                    jDateDataVencimento.setDate(dataVencDate);
                    //   JOptionPane.showMessageDialog(null, "dia data Nova ", dataNova, 1);
                    diaDaSemanaStr = dataVencStr.substring(0, 3);
                    if (diaDaSemanaStr.equals("Sat")) {

                        //   JOptionPane.showMessageDialog(null, "diaDaSemanaStr primeiro if ", diaDaSemanaStr, 1);
                        a = dataVencDate.getTime();
                        a = a + 172800000;
                        dataVencDate = new Date(a);
                        dataVencStr = String.valueOf(dataVencDate);
                        //  JOptionPane.showMessageDialog(null, "dataVencStr 2 ", dataVencStr, 1);
                        dataNova = new SimpleDateFormat("yyyy-MM-dd").format(dataVencDate);
                        jDateDataVencimento.setDate(dataVencDate);

                        // JOptionPane.showMessageDialog(null, "dia data Nova ", dataNova, 1);
                        diaDaSemanaStr = dataVencStr.substring(0, 3);
                    }
                }
            }

            //  }
        } catch (Exception e) {
        }

    }

    public void atualizaVencimentos() {
        SimpleDateFormat sdf = new SimpleDateFormat("yyyyMMdd");
        Date data = new Date();
        String dataStr = sdf.format(data);
        /////////////////////////////////////////////////////////////////// 
        try {

            String sqlBoleto = "UPDATE boleto set dataAtual = ? WHERE cidade <> 'xxxxx'";
            pst = conexao.prepareStatement(sqlBoleto);
            pst.setString(1, dataStr);

            pst.executeUpdate();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.toString());
        }
        ////////////////////////////////////////////////////////////////////////
        alterarStatus();
    }

    private void alterarStatus() {
        SimpleDateFormat sdf = new SimpleDateFormat("ddMMyyyy");
        Date data = new Date();
        String dataStr = sdf.format(data);

        String sqlSelectBoleto = "select dataAtual, dataVenc from boleto ";

        try {
            pst = conexao.prepareStatement(sqlSelectBoleto);
            rs = pst.executeQuery();
            if (rs.next()) {
                String dataAtual = rs.getString(1);
                String dataVenc = rs.getString(2);
                try {
                    Date dataAtualDate = sdf.parse(dataAtual);
                    Date dataVencDate = sdf.parse(dataVenc);
                    String dataAtualStr = sdf.format(dataVencDate);
                    a = dataAtualDate.getTime();
                    b = dataVencDate.getTime();
                    Date dataAtualNumero = new Date(a);
                    Date dataVencNumero = new Date(b);
                    System.out.println("dataAtualNumero :" + dataAtualNumero);
                    System.out.println("dataVencNumero :" + dataVencNumero);
                } catch (ParseException ex) {
                    Logger.getLogger(RecalcularBoleto.class.getName()).log(Level.SEVERE, null, ex);
                }
               

            }

        } catch (SQLException ex) {
            Logger.getLogger(RecalcularBoleto.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    //////////////////////SETA O STATUS //////////////////////////////////////////////////
    public void setarVencidos() {
        List<String> listaCodVencidos = new ArrayList<>();
        SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
        String sql = "select codBoleto, dataVenc, dataAtual from boleto ";
        try {
            pst = conexao.prepareStatement(sql);
            rs = pst.executeQuery();
            //    JOptionPane.showMessageDialog(null, "quantidade de linhas encontradas",linhaStr,1);
            while (rs.next()) {
                String dataVencTipoStr = rs.getString(2);
                String anoVenc = dataVencTipoStr.substring(0, 4);
                String mesVenc = dataVencTipoStr.substring(5, 7);
                String diaVenc = dataVencTipoStr.substring(8);
                String dataVencCompletaStr = diaVenc + "/" + mesVenc + "/" + anoVenc;
                //  JOptionPane.showMessageDialog(null, "Data Vencimento completa", dataVencCompletaStr, 1);

                String dataAtualTipoStr = rs.getString(3);
                String anoAtual = dataAtualTipoStr.substring(0, 4);
                String mesAtual = dataAtualTipoStr.substring(5, 7);
                String diaAtual = dataAtualTipoStr.substring(8);
                String dataAtualCompletaStr = diaAtual + "/" + mesAtual + "/" + anoAtual;
                // JOptionPane.showMessageDialog(null, "Data atual completa", dataAtualCompletaStr, 1);

                try {
                    Date dataAtualDate1 = sdf.parse(dataAtualCompletaStr);
                    Date dataVencDate1 = sdf.parse(dataVencCompletaStr);
                    long quantDias = dataAtualDate1.getTime() - dataVencDate1.getTime();
                    System.out.println("long QuantDias " + quantDias);
                    long quantDiasAtraso = TimeUnit.DAYS.convert(quantDias, TimeUnit.MILLISECONDS);

                    if (quantDiasAtraso > 0) {
                        String codBoletoVenc = rs.getString(1);
                        listaCodVencidos.add(codBoletoVenc);
                        //  JOptionPane.showMessageDialog(null, "Codigo do boleto ",codBoleto,1);

                        //    JOptionPane.showMessageDialog(null, "Atrasado ");
                        //    System.out.println("Dias de atraso: " + quantDiasAtraso);
                        for (String vencido : listaCodVencidos) {
                            try {
                                String sqlBoleto = "UPDATE boleto set status = 'VENCIDO' where codBoleto = ?";
                                pst = conexao.prepareStatement(sqlBoleto);
                                pst.setString(1, vencido);
                                pst.executeUpdate();
                            } catch (SQLException ex) {
                                Logger.getLogger(RecalcularBoleto.class.getName()).log(Level.SEVERE, null, ex);
                            }
                        }
                    }

                } catch (ParseException ex) {
                    Logger.getLogger(RecalcularBoleto.class.getName()).log(Level.SEVERE, null, ex);
                }

            }
        } catch (SQLException ex) {
            Logger.getLogger(RecalcularBoleto.class.getName()).log(Level.SEVERE, null, ex);
        }

        //    JOptionPane.showMessageDialog(null, "Qauntidade de vencidos", contVencidoStr, 1);
        setarEmAberto();
    }

    private void setarEmAberto() {
        List<String> listaCodEmAberto = new ArrayList<>();
        SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
        String sql = "select codBoleto, dataVenc, dataAtual from boleto ";
        try {
            pst = conexao.prepareStatement(sql);
            rs = pst.executeQuery();
            //    JOptionPane.showMessageDialog(null, "quantidade de linhas encontradas",linhaStr,1);
            while (rs.next()) {
                int linha = rs.getRow();
                String linhaStr = String.valueOf(linha);
                //  System.out.println("quantidade linha encontrada " + linha);
                //  JOptionPane.showMessageDialog(null, "quantidade de linhas encontradas", linhaStr, 1);
                String dataVencTipoStr = rs.getString(2);
                String anoVenc = dataVencTipoStr.substring(0, 4);
                String mesVenc = dataVencTipoStr.substring(5, 7);
                String diaVenc = dataVencTipoStr.substring(8);
                String dataVencCompletaStr = diaVenc + "/" + mesVenc + "/" + anoVenc;

                String dataAtualTipoStr = rs.getString(3);
                String anoAtual = dataAtualTipoStr.substring(0, 4);
                String mesAtual = dataAtualTipoStr.substring(5, 7);
                String diaAtual = dataAtualTipoStr.substring(8);
                String dataAtualCompletaStr = diaAtual + "/" + mesAtual + "/" + anoAtual;

                try {
                    Date dataAtualDate1 = sdf.parse(dataAtualCompletaStr);
                    Date dataVencDate1 = sdf.parse(dataVencCompletaStr);
                    long quantDias1 = dataAtualDate1.getTime() - dataVencDate1.getTime();
                    System.out.println("long QuantDias " + quantDias1);
                    long quantDiasAtraso2 = TimeUnit.DAYS.convert(quantDias1, TimeUnit.MILLISECONDS);

                    if (quantDiasAtraso2 <= 0) {
                        String codBoletoAberto = rs.getString(1);
                        listaCodEmAberto.add(codBoletoAberto);
                        //      JOptionPane.showMessageDialog(null, "Codigo do boleto ",codBoletoAberto,1);

                        //    JOptionPane.showMessageDialog(null, "Atrasado ");
                        //    System.out.println("Dias de atraso: " + quantDiasAtraso2);
                        for (String aberto : listaCodEmAberto) {
                            try {
                                String sqlBoleto = "UPDATE boleto set status = 'EM ABERTO' where codBoleto = ?";
                                pst = conexao.prepareStatement(sqlBoleto);
                                pst.setString(1, aberto);
                                pst.executeUpdate();
                            } catch (SQLException ex) {
                                Logger.getLogger(RecalcularBoleto.class.getName()).log(Level.SEVERE, null, ex);
                            }
                        }
                    }

                } catch (ParseException ex) {
                    Logger.getLogger(RecalcularBoleto.class.getName()).log(Level.SEVERE, null, ex);
                }

            }
        } catch (SQLException ex) {
            Logger.getLogger(RecalcularBoleto.class.getName()).log(Level.SEVERE, null, ex);
        }

        //    JOptionPane.showMessageDialog(null, "Qauntidade de vencidos", contVencidoStr, 1);
    }
}
