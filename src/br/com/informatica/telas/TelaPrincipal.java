/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.com.informatica.telas;

import br.com.informatica.dal.Conexao;
import static br.com.informatica.telas.TelaLogin.anoAtual;
import br.com.informatica.util.TelaDeTestes;
//import br.com.informatica.util.TelaDeTestes;

import br.com.informatica.util.TelaLbSy;
import br.com.informatica.util.Teste2;
import br.com.informatica.util.Teste4;
import static java.lang.Thread.sleep;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Locale;
import java.util.concurrent.TimeUnit;
import javax.swing.JFrame;
import javax.swing.JMenu;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import javax.swing.UIManager;
import net.proteanit.sql.DbUtils;
import org.pushingpixels.substance.api.skin.SubstanceRavenLookAndFeel;

/**
 *
 * @author edilson
 */
public class TelaPrincipal extends javax.swing.JFrame {

    //  GerenteDeJanelas gerenteJanelas;
    Connection conexao = null;
    static PreparedStatement pst = null;
    static ResultSet rs = null;
    static String datafinal;
    static String dataFinalFormatada;
    static Integer diaVenc, mesVenc, anoVenc, diaAtual, mesAtual, anoAtual;
    static long quantTotalDias;

    // Classe de apoio para o banco de dados
    public TelaPrincipal() {
        setExtendedState(MAXIMIZED_BOTH);

       
        initComponents();
        conexao = Conexao.conector;
        verificaValidadeSistema();
        // chamaThread();
        new Thread() {
            public void run() {
                int x = 400;
                int y = jLNotificaoDeBloqueio.getLocation().y;
                //   int y = jLSetaBloqueio.getLocation().y;
                while (true) {
                    x--;
                    if (x < -100) {
                        x = getWidth();

                    }
                    jLNotificaoDeBloqueio.setLocation(x, 640);
                    try {
                        sleep(10);
                    } catch (Exception e) {

                    }
                }
            }
        }.start();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDialog1 = new javax.swing.JDialog();
        lblUsuario = new javax.swing.JLabel();
        jCalendar2 = new com.toedter.calendar.JCalendar();
        jLNotificaoDeBloqueio = new javax.swing.JLabel();
        DesktopPrincipal = new javax.swing.JDesktopPane();
        jMenuBar1 = new javax.swing.JMenuBar();
        menuInicio = new javax.swing.JMenu();
        menuCaixa = new javax.swing.JMenu();
        menuCaixaEntrada = new javax.swing.JMenuItem();
        menuCaixaSaida = new javax.swing.JMenuItem();
        menuCaixaCategoria = new javax.swing.JMenuItem();
        menuUsuarios = new javax.swing.JMenuItem();
        menuCliente = new javax.swing.JMenuItem();
        menuCorretor = new javax.swing.JMenuItem();
        menuAgenda = new javax.swing.JMenu();
        menuAgendaAgendamento = new javax.swing.JMenuItem();
        menuAgendaRotinas = new javax.swing.JMenuItem();
        menuVendas = new javax.swing.JMenuItem();
        menuLoteamento = new javax.swing.JMenuItem();
        menuImovel = new javax.swing.JMenuItem();
        jMenuTestes = new javax.swing.JMenuItem();
        menuRelatorio = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        menuBoleto = new javax.swing.JMenu();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenu1 = new javax.swing.JMenu();
        jMenuGerarBoleto = new javax.swing.JMenuItem();
        jMenuRecalcular = new javax.swing.JMenuItem();
        jMenuAdcionarFeriados = new javax.swing.JMenuItem();
        menuSobre = new javax.swing.JMenu();
        menuLogout = new javax.swing.JMenu();
        menuLogoutFechar = new javax.swing.JMenuItem();
        menuLogoutSair = new javax.swing.JMenuItem();

        javax.swing.GroupLayout jDialog1Layout = new javax.swing.GroupLayout(jDialog1.getContentPane());
        jDialog1.getContentPane().setLayout(jDialog1Layout);
        jDialog1Layout.setHorizontalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jDialog1Layout.setVerticalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblUsuario.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        lblUsuario.setText("<html><u>Usuario");
        getContentPane().add(lblUsuario, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 620, 240, -1));

        jCalendar2.setBackground(new java.awt.Color(153, 204, 255));
        jCalendar2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jCalendar2.setDecorationBackgroundColor(new java.awt.Color(255, 153, 153));
        jCalendar2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jCalendar2.setTodayButtonText("");
        jCalendar2.setTodayButtonVisible(true);
        jCalendar2.setWeekOfYearVisible(false);
        getContentPane().add(jCalendar2, new org.netbeans.lib.awtextra.AbsoluteConstraints(980, 0, 385, 190));

        jLNotificaoDeBloqueio.setEnabled(false);
        getContentPane().add(jLNotificaoDeBloqueio, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 640, -1, -1));

        DesktopPrincipal.setPreferredSize(new java.awt.Dimension(1008, 610));

        javax.swing.GroupLayout DesktopPrincipalLayout = new javax.swing.GroupLayout(DesktopPrincipal);
        DesktopPrincipal.setLayout(DesktopPrincipalLayout);
        DesktopPrincipalLayout.setHorizontalGroup(
            DesktopPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 970, Short.MAX_VALUE)
        );
        DesktopPrincipalLayout.setVerticalGroup(
            DesktopPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 610, Short.MAX_VALUE)
        );

        getContentPane().add(DesktopPrincipal, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, 970, -1));

        menuInicio.setText("Cadastro");
        menuInicio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuInicioActionPerformed(evt);
            }
        });

        menuCaixa.setText("Caixa");
        menuCaixa.setEnabled(false);
        menuCaixa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuCaixaActionPerformed(evt);
            }
        });

        menuCaixaEntrada.setText("Entrada");
        menuCaixaEntrada.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuCaixaEntradaActionPerformed(evt);
            }
        });
        menuCaixa.add(menuCaixaEntrada);

        menuCaixaSaida.setText("Saida");
        menuCaixaSaida.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuCaixaSaidaActionPerformed(evt);
            }
        });
        menuCaixa.add(menuCaixaSaida);

        menuCaixaCategoria.setText("Categoria");
        menuCaixaCategoria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuCaixaCategoriaActionPerformed(evt);
            }
        });
        menuCaixa.add(menuCaixaCategoria);

        menuInicio.add(menuCaixa);

        menuUsuarios.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_U, java.awt.event.InputEvent.ALT_MASK));
        menuUsuarios.setText("Usuarios");
        menuUsuarios.setEnabled(false);
        menuUsuarios.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuUsuariosActionPerformed(evt);
            }
        });
        menuInicio.add(menuUsuarios);

        menuCliente.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.ALT_MASK));
        menuCliente.setText("Cliente");
        menuCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuClienteActionPerformed(evt);
            }
        });
        menuInicio.add(menuCliente);

        menuCorretor.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.ALT_MASK));
        menuCorretor.setText("Corretor");
        menuCorretor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuCorretorActionPerformed(evt);
            }
        });
        menuInicio.add(menuCorretor);

        menuAgenda.setText("Agenda");
        menuAgenda.setEnabled(false);

        menuAgendaAgendamento.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_G, java.awt.event.InputEvent.ALT_MASK));
        menuAgendaAgendamento.setText("Verificar Agendamento");
        menuAgendaAgendamento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuAgendaAgendamentoActionPerformed(evt);
            }
        });
        menuAgenda.add(menuAgendaAgendamento);

        menuAgendaRotinas.setText("Rotinas de Agendamento");
        menuAgendaRotinas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuAgendaRotinasActionPerformed(evt);
            }
        });
        menuAgenda.add(menuAgendaRotinas);

        menuInicio.add(menuAgenda);

        menuVendas.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_V, java.awt.event.InputEvent.ALT_MASK));
        menuVendas.setText("Vendas");
        menuVendas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuVendasActionPerformed(evt);
            }
        });
        menuInicio.add(menuVendas);

        menuLoteamento.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_L, java.awt.event.InputEvent.ALT_MASK));
        menuLoteamento.setText("Loteamento");
        menuLoteamento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuLoteamentoActionPerformed(evt);
            }
        });
        menuInicio.add(menuLoteamento);

        menuImovel.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_I, java.awt.event.InputEvent.ALT_MASK));
        menuImovel.setText("Imovel");
        menuImovel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuImovelActionPerformed(evt);
            }
        });
        menuInicio.add(menuImovel);

        jMenuTestes.setText("TelaDeTestes");
        jMenuTestes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuTestesActionPerformed(evt);
            }
        });
        menuInicio.add(jMenuTestes);

        jMenuBar1.add(menuInicio);

        menuRelatorio.setText("Relatorio");
        menuRelatorio.setEnabled(false);

        jMenuItem1.setText("Ralatorio de Saida");
        menuRelatorio.add(jMenuItem1);

        jMenuItem2.setText("Relatorio de Entrada");
        menuRelatorio.add(jMenuItem2);

        jMenuBar1.add(menuRelatorio);

        menuBoleto.setText("Boleto");

        jMenuItem3.setText("Buscar");
        menuBoleto.add(jMenuItem3);

        jMenu1.setText("Manutencao");

        jMenuGerarBoleto.setText("Gerar Boleto");
        jMenuGerarBoleto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuGerarBoletoActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuGerarBoleto);

        jMenuRecalcular.setText("Recalcular");
        jMenuRecalcular.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuRecalcularActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuRecalcular);

        jMenuAdcionarFeriados.setText("Adicionar Feriados");
        jMenuAdcionarFeriados.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuAdcionarFeriadosActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuAdcionarFeriados);

        menuBoleto.add(jMenu1);

        jMenuBar1.add(menuBoleto);

        menuSobre.setText("Sobre");
        jMenuBar1.add(menuSobre);

        menuLogout.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/informatica/icones/sair.png"))); // NOI18N
        menuLogout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuLogoutActionPerformed(evt);
            }
        });

        menuLogoutFechar.setText("Fechar");
        menuLogoutFechar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuLogoutFecharActionPerformed(evt);
            }
        });
        menuLogout.add(menuLogoutFechar);

        menuLogoutSair.setText("Sair");
        menuLogoutSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuLogoutSairActionPerformed(evt);
            }
        });
        menuLogout.add(menuLogoutSair);

        jMenuBar1.add(menuLogout);

        setJMenuBar(jMenuBar1);

        setSize(new java.awt.Dimension(1283, 724));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void menuCaixaEntradaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuCaixaEntradaActionPerformed
        new TelaEntrada().lblFormatoData.setText("Foramato da Data: Ano-Mes-Dia");
        new TelaEntrada().lblFormatoData.setVisible(true);

        cadastrarEntrada();


    }//GEN-LAST:event_menuCaixaEntradaActionPerformed

    private void menuCaixaSaidaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuCaixaSaidaActionPerformed
        new TelaSaida().lblFormatoData.setText("Foramato da Data: Ano-Mes-Dia");
        new TelaSaida().lblFormatoData.setVisible(true);

        cadastrarSaida();
//           new TelaSaida2().lblFormatoData.setText("Foramato da Data: Ano-Mes-Dia");
//        new TelaSaida2().lblFormatoData.setVisible(true);

        //      cadastrarSaida();
    }//GEN-LAST:event_menuCaixaSaidaActionPerformed

    private void menuCaixaCategoriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuCaixaCategoriaActionPerformed
        new TelaCadastroCategoria().setVisible(true);
        //  this.setVisible(false);
    }//GEN-LAST:event_menuCaixaCategoriaActionPerformed

    private void menuUsuariosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuUsuariosActionPerformed
        adicionarUsuario();
    }//GEN-LAST:event_menuUsuariosActionPerformed

    private void menuLogoutFecharActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuLogoutFecharActionPerformed
        int fechar = JOptionPane.showConfirmDialog(null, "Tem certeza que deseja Encerrar o Programa?", "Atenção", JOptionPane.YES_NO_OPTION);
        if (fechar == JOptionPane.YES_OPTION) {
            //encerra o sistema
            System.exit(0);
        }
    }//GEN-LAST:event_menuLogoutFecharActionPerformed

    private void menuLogoutSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuLogoutSairActionPerformed
        int sair = JOptionPane.showConfirmDialog(null, "Tem certeza que deseja sair?",
                "Atenção", JOptionPane.YES_NO_OPTION);

        if (sair == JOptionPane.YES_OPTION) {

            this.dispose();
            TelaLogin login = new TelaLogin();

            login.setVisible(true);
        }
    }//GEN-LAST:event_menuLogoutSairActionPerformed

    private void menuCaixaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuCaixaActionPerformed
        TelaPrincipal principal = new TelaPrincipal();
        principal.setVisible(true);

    }//GEN-LAST:event_menuCaixaActionPerformed

    private void menuAgendaRotinasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuAgendaRotinasActionPerformed

        new TelaVerificarRotinasDeAgendamento().setVisible(true);


    }//GEN-LAST:event_menuAgendaRotinasActionPerformed

    private void menuAgendaAgendamentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuAgendaAgendamentoActionPerformed
        new TelaNewAgenda().setVisible(true);
    }//GEN-LAST:event_menuAgendaAgendamentoActionPerformed

    private void menuInicioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuInicioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_menuInicioActionPerformed

    private void menuClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuClienteActionPerformed
        new TelaCliente().setVisible(true);
//
        cadastrarCliente();

    }//GEN-LAST:event_menuClienteActionPerformed

    private void menuCorretorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuCorretorActionPerformed
        new TelaCliente().setVisible(true);

        cadastrarCorretor();
    }//GEN-LAST:event_menuCorretorActionPerformed

    private void menuVendasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuVendasActionPerformed
        new TelaVendas().setVisible(true);
        CadastrarVendas();
    }//GEN-LAST:event_menuVendasActionPerformed

    private void menuLoteamentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuLoteamentoActionPerformed
        new TelaLoteamento().setVisible(true);
        cadastrarLoteamento();
        // gerenteJanelas.abrirJanelas(TelaLoteamento.getInstancia());

    }//GEN-LAST:event_menuLoteamentoActionPerformed

    private void menuImovelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuImovelActionPerformed
        new TelaImovel().setVisible(true);
        cadastrarImovel();
    }//GEN-LAST:event_menuImovelActionPerformed

    private void menuLogoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuLogoutActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_menuLogoutActionPerformed

    private void jMenuTestesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuTestesActionPerformed

//            TelaDeTestes teste = new TelaDeTestes();
//    teste.setVisible(true);
//        Teste2 teste2 = new Teste2();
//        teste2.setVisible(true);
        Teste4 teste4 = new Teste4();
        teste4.setVisible(true);
        //   cadastrarImovel();

    }//GEN-LAST:event_jMenuTestesActionPerformed

    private void jMenuGerarBoletoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuGerarBoletoActionPerformed
        new GerarBoleto().setVisible(true);
        gerarBoleto();
    }//GEN-LAST:event_jMenuGerarBoletoActionPerformed

    private void jMenuRecalcularActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuRecalcularActionPerformed
        new RecalcularBoleto().setVisible(true);
        RecalcularBoleto();
    }//GEN-LAST:event_jMenuRecalcularActionPerformed

    private void jMenuAdcionarFeriadosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuAdcionarFeriadosActionPerformed
        new TelaFeriados().setVisible(true);
        AdicionaFeriados();
    }//GEN-LAST:event_jMenuAdcionarFeriadosActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
 try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                //  if ("Nimbus".equals(info.getName())) {
                if ("Windows".equals(info.getName())) {

                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }

        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        //</editor-fold>
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public static javax.swing.JDesktopPane DesktopPrincipal;
    private com.toedter.calendar.JCalendar jCalendar2;
    private javax.swing.JDialog jDialog1;
    public static javax.swing.JLabel jLNotificaoDeBloqueio;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuItem jMenuAdcionarFeriados;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuGerarBoleto;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuRecalcular;
    private javax.swing.JMenuItem jMenuTestes;
    protected javax.swing.JLabel lblUsuario;
    protected javax.swing.JMenu menuAgenda;
    private javax.swing.JMenuItem menuAgendaAgendamento;
    private javax.swing.JMenuItem menuAgendaRotinas;
    private javax.swing.JMenu menuBoleto;
    protected javax.swing.JMenu menuCaixa;
    private javax.swing.JMenuItem menuCaixaCategoria;
    private javax.swing.JMenuItem menuCaixaEntrada;
    private javax.swing.JMenuItem menuCaixaSaida;
    private javax.swing.JMenuItem menuCliente;
    private javax.swing.JMenuItem menuCorretor;
    private javax.swing.JMenuItem menuImovel;
    private javax.swing.JMenu menuInicio;
    private javax.swing.JMenu menuLogout;
    private javax.swing.JMenuItem menuLogoutFechar;
    private javax.swing.JMenuItem menuLogoutSair;
    private javax.swing.JMenuItem menuLoteamento;
    public javax.swing.JMenu menuRelatorio;
    private javax.swing.JMenu menuSobre;
    public javax.swing.JMenuItem menuUsuarios;
    private javax.swing.JMenuItem menuVendas;
    // End of variables declaration//GEN-END:variables

    private void cadastrarEntrada() {

        TelaEntrada telaEntrada = new TelaEntrada();
        telaEntrada.btnAlterarEntrada.setEnabled(false);
        telaEntrada.btnDeletaEntrada.setEnabled(false);
        telaEntrada.setVisible(true);
        DesktopPrincipal.add(telaEntrada);
    }

    private void cadastrarSaida() {
        TelaSaida telaSaida = new TelaSaida();
        telaSaida.setVisible(true);
        DesktopPrincipal.add(telaSaida);
//       TelaSaida2 telaSaida2 = new TelaSaida2();
//        telaSaida2.setVisible(true);
//        DesktopPrincipal.add(telaSaida2); 
    }

    private void adicionarUsuario() {
//        TelaUsuarios telaUsuario = new TelaUsuarios();
//        telaUsuario.setVisible(true);
//        DesktopPrincipal.add(telaUsuario);
        TelaUsuarios1 telaUsuario = new TelaUsuarios1();
        telaUsuario.setVisible(true);
        DesktopPrincipal.add(telaUsuario);
    }

    private void cadastrarCliente() {

        TelaCliente telaCliente = new TelaCliente();
        telaCliente.setVisible(true);
        DesktopPrincipal.add(telaCliente);
    }

    private void cadastrarCorretor() {
        TelaCorretor telaCorretor = new TelaCorretor();
        telaCorretor.setVisible(true);
        DesktopPrincipal.add(telaCorretor);
    }

    private void CadastrarVendas() {
        TelaVendas telaVendas = new TelaVendas();
        telaVendas.setVisible(true);
        telaVendas.btnAlterarVenda.setEnabled(false);
        telaVendas.btnExcluirVenda.setEnabled(false);
        DesktopPrincipal.add(telaVendas);
    }

    protected void cadastrarLoteamento() {
        TelaLoteamento loteamento = new TelaLoteamento();
        loteamento.setVisible(true);
        DesktopPrincipal.add(loteamento);

    }

    private void cadastrarImovel() {
        TelaImovel imovel = new TelaImovel();
        imovel.setVisible(true);
        imovel.btnAlterarImovel.setEnabled(false);
        imovel.btnExcluirImovel.setEnabled(false);
        DesktopPrincipal.add(imovel);
    }

    private void chamarCalendarios() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    private void gerarBoleto() {
        GerarBoleto boleto = new GerarBoleto();
        boleto.setVisible(true);
        DesktopPrincipal.add(boleto);
    }

    private void verificaRotinasDeAgendamento() {

        try {
            String sql = "select * from verifica_agenda where codVerificaAgenda=?";
            pst = conexao.prepareStatement(sql);
            pst.setInt(1, 1);
            rs = pst.executeQuery();
            if (rs.next()) {

                String status = rs.getString(2);

                System.out.println("Resultado do RS: " + rs.getString(2));
            }

            if (rs.getString(2).equals("SIM")) {
                new TelaNewAgenda().verificaAgenda();
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }

    public void verificaRotinasNoLogin(String status) {
        String STATUS = status;
        new TelaVerificarRotinasDeAgendamento().cboMudarStatus.setSelectedItem(STATUS);
    }

    private void verificaValidadeSistema() {
        TelaLogin login = new TelaLogin();
        try {
            String sql2 = "SELECT * from lbsy";
            Date dataAtual = new Date();

            SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
            SimpleDateFormat sdf2 = new SimpleDateFormat("ddMMyyyy");

            String dataAtualFormatada = sdf.format(dataAtual);
            anoAtual = Integer.parseInt(dataAtualFormatada.substring(0, 4));
            System.out.println("ANO ATUAL: " + anoAtual);
            mesAtual = Integer.parseInt(dataAtualFormatada.substring(5, 7));
            System.out.println("MES ATUAL: " + mesAtual);
            diaAtual = Integer.parseInt(dataAtualFormatada.substring(8));
            System.out.println("DIA ATUAL: " + diaAtual);
            System.out.println("Data ATual formatada: " + dataAtualFormatada);

            pst = conexao.prepareStatement(sql2);

            rs = pst.executeQuery();
            if (rs.next()) {
                datafinal = rs.getString(2);
                System.out.println("Data Final Tirado do banco: " + datafinal);
                Date dataFinalDate = sdf.parse(datafinal);//yyyyMMdd
                dataFinalFormatada = sdf.format(dataFinalDate);
                anoVenc = Integer.parseInt(dataFinalFormatada.substring(0, 4));
                System.out.println("ANO VENC: " + anoVenc);
                mesVenc = Integer.parseInt(dataFinalFormatada.substring(5, 7));
                System.out.println("MES VENC: " + mesVenc.toString());

                diaVenc = Integer.parseInt(dataFinalFormatada.substring(8));
                System.out.println("DIA VENC + 1::::: " + (diaVenc));
                System.out.println("Data final formatada: " + dataFinalFormatada);
                /////////////////////////////////##///////////////////////////////// 
                String recebDataFinal = rs.getString(2);//2019-08-25
                System.out.println("recebDataFinal::::" + recebDataFinal);
                String ano2 = recebDataFinal.substring(0, 4);
                String mes2 = recebDataFinal.substring(5, 7);
                String dia2 = recebDataFinal.substring(8);
                String dataFinalCompletaStr = dia2 + mes2 + ano2;
                System.out.println("dataFinalCompletaStr" + dataFinalCompletaStr);
                Date recebDataFinalDate = sdf2.parse(dataFinalCompletaStr);
                System.out.println("recebDataFinalDate" + recebDataFinalDate);
                Date dataInicialDate = new Date();
                System.out.println("dataInicial2 " + dataInicialDate);
                String dataFinalStr = sdf2.format(recebDataFinalDate);
                System.out.println("dataFinalStr " + dataFinalStr);
                String dataInicialStr = sdf2.format(dataInicialDate);
                System.out.println("dataInicialStr" + dataInicialStr);
                Date dataFinalDate2 = sdf2.parse(dataFinalStr);
                Date dataInicialDate2 = sdf2.parse(dataInicialStr);

                long quantDias = Math.abs(dataFinalDate2.getTime() - dataInicialDate2.getTime());
                long quantTotalDias = TimeUnit.DAYS.convert(quantDias, TimeUnit.MILLISECONDS);
                //  JOptionPane.showMessageDialog(null,quantTotalDias,"Quantidade de dias de validação do Sistema" ,1);
                String perfil = login.perfil;

                if (quantTotalDias > 70) {
                    if (!perfil.equals("Super")) {
                        do {
                            JOptionPane.showMessageDialog(null, "<html><font color=red ><font size=18 >Sistema Bloqueado!", "", 0);
                            jLNotificaoDeBloqueio.setText("<html><font color=red >Sua licença para uso do sistema está vencida, Ligue (62)98188-7881");
                            Conexao.fechaConexao();
                            perfil = "Super";
                        } while (!perfil.equals("Super"));
                    }
                }
            }
            // int diferencaDias = diaVenc = diaAtual;           
            String perfil = login.perfil;

            if ((diaAtual.equals(diaVenc - 5)) && (mesAtual.equals(mesVenc)) && (anoAtual.equals(anoVenc))) {
                jLNotificaoDeBloqueio.setText("Sua licença para uso do sistema Vence em 5 Dias, Ligue (62)98188-7881");
            } else if ((diaAtual.equals(diaVenc - 4)) && (mesAtual.equals(mesVenc)) && (anoAtual.equals(anoVenc))) {
                jLNotificaoDeBloqueio.setText("Sua licença para uso do sistema Vence em 4 Dias, Ligue (62)98188-7881");
            } else if ((diaAtual.equals(diaVenc - 3)) && (mesAtual.equals(mesVenc)) && (anoAtual.equals(anoVenc))) {
                jLNotificaoDeBloqueio.setText("Sua licença para uso do sistema Vence em 3 Dias, Ligue (62)98188-7881");
            } else if ((diaAtual.equals(diaVenc - 2)) && (mesAtual.equals(mesVenc)) && (anoAtual.equals(anoVenc))) {
                jLNotificaoDeBloqueio.setText("Sua licença para uso do sistema Vence em 2 Dias, Ligue (62)98188-7881");
            } else if ((diaAtual.equals(diaVenc - 1)) && (mesAtual.equals(mesVenc)) && (anoAtual.equals(anoVenc))) {
                jLNotificaoDeBloqueio.setText("Sua licença para uso do sistema Vence em 1 Dia, Ligue (62)98188-7881");
            } else if ((diaAtual.equals(diaVenc)) && (mesAtual.equals(mesVenc)) && (anoAtual.equals(anoVenc))) {
                jLNotificaoDeBloqueio.setText("<html><font color=red >Sua licença para uso do sistema Vence HOJE, Ligue (62)98188-7881");
                JOptionPane.showMessageDialog(null, "<html><font color=red >Atenção!! Seu Sistema Vence hoje.\nApós o Vencimento Ele ainda funcionará por 5 Dias,\nEntão Ele será Bloqueado! , Ligue (62)98188-7881", "", 0);
                ///////////////////////////////////////////////////////////////////////////////////////////////////
            } else if ((diaAtual.equals(diaVenc + 1)) && (mesAtual.equals(mesVenc)) && (anoAtual.equals(anoVenc))) {
                jLNotificaoDeBloqueio.setText("Sistema VENCIDO! Bloqueio em 5 DIAS, Ligue (62)98188-7881");
            } else if ((diaAtual.equals(diaVenc + 2)) && (mesAtual.equals(mesVenc)) && (anoAtual.equals(anoVenc))) {
                jLNotificaoDeBloqueio.setText("Sistema VENCIDO! Bloqueio em 4 DIAS, Ligue (62)98188-7881");
                /////////////////////////////////////////////////////////////////
            } else if ((diaAtual.equals(diaVenc + 3)) && (mesAtual.equals(mesVenc)) && (anoAtual.equals(anoVenc))) {
                jLNotificaoDeBloqueio.setText("Sistema VENCIDO! Bloqueio em 3 DIAS, Ligue (62)98188-7881");
            } else if ((diaAtual.equals(diaVenc + 4)) && (mesAtual.equals(mesVenc)) && (anoAtual.equals(anoVenc))) {
                jLNotificaoDeBloqueio.setText("Sistema VENCIDO! Bloqueio em 2 DIAS, Ligue (62)98188-7881");
            } else if ((diaAtual.equals(diaVenc + 5)) && (mesAtual.equals(mesVenc)) && (anoAtual.equals(anoVenc))) {
                jLNotificaoDeBloqueio.setEnabled(true);
                jLNotificaoDeBloqueio.setText("<html><font color=red >Sistema VENCIDO! Bloqueio em 1 DIA, Ligue (62)98188-7881");
            } else if ((diaAtual > (diaVenc + 5)) && (mesAtual.equals(mesVenc)) && ((anoAtual) >= (anoVenc))) {

                jLNotificaoDeBloqueio.setText("<html><font color=red >Sistema BLOQUADO , Ligue (62)98188-7881");

                // JOptionPane.showMessageDialog(null, "Perfil do usuario "+loginPerfil );
                if (!perfil.equals("Super")) {
                    do {
                        JOptionPane.showMessageDialog(null, "<html><font color=red ><font size=18 >Sistema Bloqueado!", "", 0);
                        Conexao.fechaConexao();
                        perfil = "Super";
                    } while (!perfil.equals("Super"));

                }
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }

//    private void chamaThread() {
//
//    }
    private void RecalcularBoleto() {
        RecalcularBoleto recalBoleto = new RecalcularBoleto();
        recalBoleto.atualizaVencimentos();// INSER A DATA ATUAL NA TABELA
        recalBoleto.setarVencidos();// SE A DATA ATUAL FOR > QUE DATA VENCIMENTO SETAR (VENCIDO)
        recalBoleto.setVisible(true);
        DesktopPrincipal.add(recalBoleto);
    }

    private void AdicionaFeriados() {
        TelaFeriados feriados = new TelaFeriados();
        feriados.setVisible(true);
        DesktopPrincipal.add(feriados);
    }
}
