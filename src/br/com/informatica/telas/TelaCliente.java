/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.com.informatica.telas;

import br.com.informatica.dal.Conexao;
import static br.com.informatica.telas.TelaEntrada.pst;
import static br.com.informatica.telas.TelaSaida.pst;
import com.sun.glass.events.KeyEvent;
import com.sun.glass.events.MouseEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JOptionPane;
import net.proteanit.sql.DbUtils;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.view.JasperViewer;
import org.apache.commons.logging.LogFactory;

/**
 *
 * @author edilson
 */
public class TelaCliente extends javax.swing.JInternalFrame {

    PreparedStatement pst = null;
    Connection conexao = null;
    ResultSet rs = null;

    public TelaCliente() {
        initComponents();
        btnAlteraCliente.setEnabled(false);
        btnExcluirCliente.setEnabled(false);
        conexao = Conexao.conector;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlDadosCliente = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtCodCliente = new javax.swing.JTextField();
        txtNomeCliente = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtTelefoneCliente = new javax.swing.JFormattedTextField();
        txtCelularCliente = new javax.swing.JFormattedTextField();
        jLabel5 = new javax.swing.JLabel();
        txtCpfCliente = new javax.swing.JFormattedTextField();
        jLabel6 = new javax.swing.JLabel();
        txtRgCliente = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtEmailCliente = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        txtContatoCliente = new javax.swing.JTextField();
        pnlEnderecoCliente = new javax.swing.JPanel();
        txtComplementoCliente = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        txtQuadraCliente = new javax.swing.JTextField();
        txtBairroCliente = new javax.swing.JTextField();
        txtLoteCliente = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        txtNumeroCliente = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        txtRuaCliente = new javax.swing.JTextField();
        txtCidadeCliente = new javax.swing.JTextField();
        txtCepCliente = new javax.swing.JFormattedTextField();
        pnlMenuCliente = new javax.swing.JPanel();
        btnCadastraCliente = new javax.swing.JButton();
        btnAlteraCliente = new javax.swing.JButton();
        btnExcluirCliente = new javax.swing.JButton();
        btnImprimeCliente = new javax.swing.JButton();
        btnLimparCliente = new javax.swing.JButton();
        jLabel18 = new javax.swing.JLabel();
        txtUFCliente = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblCliente = new javax.swing.JTable();
        jLabel19 = new javax.swing.JLabel();
        txtPesquisarCliente = new javax.swing.JTextField();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setTitle("Tela Clientes");

        pnlDadosCliente.setBackground(new java.awt.Color(204, 240, 240));
        pnlDadosCliente.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel1.setText("ID Cliente");

        jLabel2.setText("Nome ");

        txtCodCliente.setEnabled(false);

        txtNomeCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNomeClienteActionPerformed(evt);
            }
        });

        jLabel3.setText("Tel");

        jLabel4.setText("Cel");

        try {
            txtTelefoneCliente.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("(##)####-####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        try {
            txtCelularCliente.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("(##)#####-####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtCelularCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCelularClienteActionPerformed(evt);
            }
        });

        jLabel5.setText("CPF");

        try {
            txtCpfCliente.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###.###.###-##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        jLabel6.setText("RG.");

        txtRgCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtRgClienteActionPerformed(evt);
            }
        });

        jLabel7.setText("Email");

        jLabel17.setText("Contato");

        javax.swing.GroupLayout pnlDadosClienteLayout = new javax.swing.GroupLayout(pnlDadosCliente);
        pnlDadosCliente.setLayout(pnlDadosClienteLayout);
        pnlDadosClienteLayout.setHorizontalGroup(
            pnlDadosClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDadosClienteLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlDadosClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addGroup(pnlDadosClienteLayout.createSequentialGroup()
                        .addGap(65, 65, 65)
                        .addGroup(pnlDadosClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtCodCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(pnlDadosClienteLayout.createSequentialGroup()
                                .addGroup(pnlDadosClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pnlDadosClienteLayout.createSequentialGroup()
                                        .addComponent(txtCpfCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel6)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtRgCliente))
                                    .addComponent(txtNomeCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(pnlDadosClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(pnlDadosClienteLayout.createSequentialGroup()
                                        .addComponent(jLabel17)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtContatoCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(pnlDadosClienteLayout.createSequentialGroup()
                                        .addComponent(jLabel7)
                                        .addGap(18, 18, 18)
                                        .addComponent(txtEmailCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(10, 10, 10)
                                        .addComponent(jLabel3)
                                        .addGap(18, 18, 18)
                                        .addComponent(txtTelefoneCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel4)
                                        .addGap(26, 26, 26)
                                        .addComponent(txtCelularCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                    .addComponent(jLabel2)
                    .addComponent(jLabel5))
                .addContainerGap(133, Short.MAX_VALUE))
        );
        pnlDadosClienteLayout.setVerticalGroup(
            pnlDadosClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDadosClienteLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlDadosClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtCodCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlDadosClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtNomeCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(txtEmailCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(txtTelefoneCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtCelularCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlDadosClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addGroup(pnlDadosClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtCpfCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel6)
                        .addComponent(txtRgCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel17)
                        .addComponent(txtContatoCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pnlEnderecoCliente.setBackground(new java.awt.Color(204, 240, 240));
        pnlEnderecoCliente.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel8.setText("Lote");

        jLabel9.setText("Cidade");

        jLabel10.setText("Numero");

        jLabel11.setText("CEP");

        jLabel13.setText("Bairro");

        jLabel14.setText("Complemento");

        jLabel15.setText("Rua");

        jLabel16.setText("Quadra");

        txtRuaCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtRuaClienteActionPerformed(evt);
            }
        });

        try {
            txtCepCliente.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("#####-###")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        pnlMenuCliente.setAlignmentX(0.0F);
        pnlMenuCliente.setAlignmentY(0.0F);
        pnlMenuCliente.setAutoscrolls(true);

        btnCadastraCliente.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/informatica/icones/add_cliente.png"))); // NOI18N
        btnCadastraCliente.setAlignmentX(-40.0F);
        btnCadastraCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCadastraClienteActionPerformed(evt);
            }
        });

        btnAlteraCliente.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/informatica/icones/alterar_registro.png"))); // NOI18N
        btnAlteraCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAlteraClienteActionPerformed(evt);
            }
        });

        btnExcluirCliente.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/informatica/icones/delete_cliente.png"))); // NOI18N
        btnExcluirCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirClienteActionPerformed(evt);
            }
        });

        btnImprimeCliente.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/informatica/icones/impressora2.png"))); // NOI18N
        btnImprimeCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnImprimeClienteActionPerformed(evt);
            }
        });

        btnLimparCliente.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/informatica/icones/clear.png"))); // NOI18N
        btnLimparCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimparClienteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlMenuClienteLayout = new javax.swing.GroupLayout(pnlMenuCliente);
        pnlMenuCliente.setLayout(pnlMenuClienteLayout);
        pnlMenuClienteLayout.setHorizontalGroup(
            pnlMenuClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlMenuClienteLayout.createSequentialGroup()
                .addGap(1, 1, 1)
                .addComponent(btnCadastraCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(btnAlteraCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(btnExcluirCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(btnImprimeCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnLimparCliente, javax.swing.GroupLayout.DEFAULT_SIZE, 118, Short.MAX_VALUE)
                .addContainerGap())
        );
        pnlMenuClienteLayout.setVerticalGroup(
            pnlMenuClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(btnLimparCliente, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(pnlMenuClienteLayout.createSequentialGroup()
                .addGroup(pnlMenuClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnCadastraCliente)
                    .addComponent(btnAlteraCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnExcluirCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnImprimeCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jLabel18.setText("UF");

        tblCliente.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "ID", "NOME", "TELF", "CEL", "CPF", "RG", "EMAIL", "CONTATO", "RUA", "QUD", "LOTE", "NUM", "STR", "COMP", "CEP", "CIDAD", "UF"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblCliente.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblClienteMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblCliente);

        jLabel19.setText("Pesquisar Cliente");

        txtPesquisarCliente.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtPesquisarClienteKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout pnlEnderecoClienteLayout = new javax.swing.GroupLayout(pnlEnderecoCliente);
        pnlEnderecoCliente.setLayout(pnlEnderecoClienteLayout);
        pnlEnderecoClienteLayout.setHorizontalGroup(
            pnlEnderecoClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlEnderecoClienteLayout.createSequentialGroup()
                .addGroup(pnlEnderecoClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(pnlEnderecoClienteLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(pnlEnderecoClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pnlEnderecoClienteLayout.createSequentialGroup()
                                .addComponent(jLabel14)
                                .addGap(18, 18, 18)
                                .addComponent(txtComplementoCliente))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pnlEnderecoClienteLayout.createSequentialGroup()
                                .addComponent(jLabel15)
                                .addGap(64, 64, 64)
                                .addComponent(txtRuaCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 295, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(10, 10, 10)
                        .addGroup(pnlEnderecoClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel16)
                            .addComponent(jLabel9))
                        .addGap(34, 34, 34)
                        .addGroup(pnlEnderecoClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(pnlEnderecoClienteLayout.createSequentialGroup()
                                .addComponent(txtQuadraCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel8)
                                .addGap(18, 18, 18)
                                .addComponent(txtLoteCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(txtCidadeCliente))
                        .addGap(12, 12, 12)
                        .addGroup(pnlEnderecoClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel10)
                            .addComponent(jLabel11))
                        .addGap(18, 18, 18)
                        .addGroup(pnlEnderecoClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlEnderecoClienteLayout.createSequentialGroup()
                                .addComponent(txtNumeroCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel13))
                            .addComponent(txtCepCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(pnlEnderecoClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlEnderecoClienteLayout.createSequentialGroup()
                                .addComponent(jLabel18)
                                .addGap(18, 18, 18)
                                .addComponent(txtUFCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(txtBairroCliente)))
                    .addGroup(pnlEnderecoClienteLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 962, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlEnderecoClienteLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel19)
                        .addGap(18, 18, 18)
                        .addComponent(txtPesquisarCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlEnderecoClienteLayout.createSequentialGroup()
                        .addGap(257, 257, 257)
                        .addComponent(pnlMenuCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlEnderecoClienteLayout.setVerticalGroup(
            pnlEnderecoClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlEnderecoClienteLayout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(pnlEnderecoClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(txtRuaCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel16)
                    .addComponent(jLabel8)
                    .addComponent(jLabel10)
                    .addComponent(txtQuadraCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtLoteCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtNumeroCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13)
                    .addComponent(txtBairroCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlEnderecoClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(txtComplementoCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9)
                    .addComponent(txtCidadeCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11)
                    .addComponent(jLabel18)
                    .addComponent(txtUFCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtCepCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addGroup(pnlEnderecoClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel19)
                    .addComponent(txtPesquisarCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 49, Short.MAX_VALUE)
                .addComponent(pnlMenuCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(pnlDadosCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(pnlEnderecoCliente, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlDadosCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlEnderecoCliente, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(16, 16, 16))
        );

        setBounds(0, 0, 1008, 610);
    }// </editor-fold>//GEN-END:initComponents

    private void txtCelularClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCelularClienteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCelularClienteActionPerformed

    private void txtNomeClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNomeClienteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNomeClienteActionPerformed

    private void txtRgClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtRgClienteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtRgClienteActionPerformed

    private void btnExcluirClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirClienteActionPerformed
       excluirCliente();
    }//GEN-LAST:event_btnExcluirClienteActionPerformed

    private void btnAlteraClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAlteraClienteActionPerformed
        alterarCliente();
    }//GEN-LAST:event_btnAlteraClienteActionPerformed

    private void btnCadastraClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCadastraClienteActionPerformed
        cadastrarCliente();
    }//GEN-LAST:event_btnCadastraClienteActionPerformed

    private void txtRuaClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtRuaClienteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtRuaClienteActionPerformed

    private void txtPesquisarClienteKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPesquisarClienteKeyReleased
        pesquisarCliente();
    }//GEN-LAST:event_txtPesquisarClienteKeyReleased

    private void tblClienteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblClienteMouseClicked
        btnCadastraCliente.setEnabled(false);
        btnAlteraCliente.setEnabled(true);
        btnExcluirCliente.setEnabled(true);
        setarCampos();
    }//GEN-LAST:event_tblClienteMouseClicked

    private void btnLimparClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimparClienteActionPerformed
        limparCampos();
    }//GEN-LAST:event_btnLimparClienteActionPerformed

    private void btnImprimeClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnImprimeClienteActionPerformed
       imprimeRelatorioCliente();
    }//GEN-LAST:event_btnImprimeClienteActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    protected javax.swing.JButton btnAlteraCliente;
    protected javax.swing.JButton btnCadastraCliente;
    protected javax.swing.JButton btnExcluirCliente;
    protected javax.swing.JButton btnImprimeCliente;
    private javax.swing.JButton btnLimparCliente;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel pnlDadosCliente;
    private javax.swing.JPanel pnlEnderecoCliente;
    private javax.swing.JPanel pnlMenuCliente;
    private javax.swing.JTable tblCliente;
    private javax.swing.JTextField txtBairroCliente;
    private javax.swing.JFormattedTextField txtCelularCliente;
    private javax.swing.JFormattedTextField txtCepCliente;
    private javax.swing.JTextField txtCidadeCliente;
    private javax.swing.JTextField txtCodCliente;
    private javax.swing.JTextField txtComplementoCliente;
    private javax.swing.JTextField txtContatoCliente;
    private javax.swing.JFormattedTextField txtCpfCliente;
    private javax.swing.JTextField txtEmailCliente;
    private javax.swing.JTextField txtLoteCliente;
    private javax.swing.JTextField txtNomeCliente;
    private javax.swing.JTextField txtNumeroCliente;
    private javax.swing.JTextField txtPesquisarCliente;
    private javax.swing.JTextField txtQuadraCliente;
    private javax.swing.JTextField txtRgCliente;
    private javax.swing.JTextField txtRuaCliente;
    private javax.swing.JFormattedTextField txtTelefoneCliente;
    private javax.swing.JTextField txtUFCliente;
    // End of variables declaration//GEN-END:variables

    private void cadastrarCliente() {
        String sql = "INSERT INTO cliente (nomeCliente,telefoneCliente,celularCliente,cpfCliente,rgCliente,emailCliente"
                + ",contatoCliente,rua,quadra,lote,numero,bairro,complemento,cep,cidade,uf ) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)";
        try {
            pst = conexao.prepareStatement(sql);
            pst.setString(1, txtNomeCliente.getText().toUpperCase());
            pst.setString(2, txtTelefoneCliente.getText());
            pst.setString(3, txtCelularCliente.getText());
            pst.setString(4, txtCpfCliente.getText().toUpperCase());
            pst.setString(5, txtRgCliente.getText().toUpperCase());
            pst.setString(6, txtEmailCliente.getText().toLowerCase());
            pst.setString(7, txtContatoCliente.getText().toUpperCase());
            pst.setString(8, txtRuaCliente.getText().toUpperCase().toUpperCase());
            pst.setString(9, txtQuadraCliente.getText());
            pst.setString(10, txtLoteCliente.getText());
            pst.setString(11, txtNumeroCliente.getText());
            pst.setString(12, txtBairroCliente.getText().toUpperCase());
            pst.setString(13, txtComplementoCliente.getText().toUpperCase());
            pst.setString(14, txtCepCliente.getText());
            pst.setString(15, txtCidadeCliente.getText().toUpperCase());
            pst.setString(16, txtUFCliente.getText().toUpperCase());
            // pst.setString(16, txtUFCliente.getText());
            // validaçao dos campos obrigatórios
            if (txtNomeCliente.getText().isEmpty()) {
                JOptionPane.showMessageDialog(null, "Campo Nome é Obrigatório!");
            } else if (txtCpfCliente.getText().isEmpty()) {
                JOptionPane.showMessageDialog(null, "Campo CPF é Obrigatório!");
            } else if (txtRgCliente.getText().isEmpty()) {
                JOptionPane.showMessageDialog(null, "Campo RG é Obrigatório!");
            } else if (txtRuaCliente.getText().isEmpty()) {
                JOptionPane.showMessageDialog(null, "Campo RUA é Obrigatório!");
            } else if (txtQuadraCliente.getText().isEmpty()) {
                JOptionPane.showMessageDialog(null, "Campo QUADRA é Obrigatório!");
            } else if (txtLoteCliente.getText().isEmpty()) {
                JOptionPane.showMessageDialog(null, "Campo LOTE é Obrigatório!");
            } else if (txtBairroCliente.getText().isEmpty()) {
                JOptionPane.showMessageDialog(null, "Campo BAIRRO é Obrigatório!");
            } else if (txtCepCliente.getText().isEmpty()) {
                JOptionPane.showMessageDialog(null, "Campo CEP é Obrigatório!");
            } else if (txtCidadeCliente.getText().isEmpty()) {
                JOptionPane.showMessageDialog(null, "Campo CIDADE é Obrigatório!");
            } else if (txtUFCliente.getText().isEmpty()) {
                JOptionPane.showMessageDialog(null, "Campo UF é Obrigatório!");
            } else {
                int rowsAfected = pst.executeUpdate();

                if (rowsAfected > 0) {
                    JOptionPane.showMessageDialog(null, "Cliente cadastrado com sucesso!", "Cadastro", 1);

                    txtNomeCliente.setText("");
                    txtTelefoneCliente.setText("");
                    txtCelularCliente.setText("");
                    txtCpfCliente.setText("");
                    txtRgCliente.setText("");
                    txtEmailCliente.setText("");
                    txtContatoCliente.setText("");
                    txtRuaCliente.setText("");
                    txtQuadraCliente.setText("");
                    txtLoteCliente.setText("");
                    txtNumeroCliente.setText("");
                    txtBairroCliente.setText("");
                    txtComplementoCliente.setText("");
                    txtCepCliente.setText("");
                    txtCidadeCliente.setText("");
                    txtUFCliente.setText("");
                    txtNomeCliente.requestFocus();
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }

    private void alterarCliente() {
        int confirma = JOptionPane.showConfirmDialog(null, "Confirma a Alteracao de Cliente? " + txtNomeCliente.getText(), "Atenção", JOptionPane.YES_NO_OPTION);
        //se confirmar for = YES_OPTION, o comando sql será executado, se txtUsuNom.getText(),
        //for Empty significa que não ha usuario com esse ID
        if (confirma == JOptionPane.YES_OPTION) {
//            Date anoCorrente = new Date();
//            SimpleDateFormat sdf = new SimpleDateFormat("ddMMyyyy");
//            String dataFormatada = sdf.format(anoCorrente);
            String sql = "update cliente set nomeCliente=?,telefoneCliente=?,celularCliente=?,cpfCliente=?,rgCliente=?,emailCliente=?"
                    + ",contatoCliente=?,rua=?,quadra=?,lote=?,numero=?,bairro=?,complemento=?,cep=?,cidade=?,uf=? where codCliente=?";
            try {
                pst = conexao.prepareStatement(sql);
                pst.setString(1, txtNomeCliente.getText().toUpperCase());
                pst.setString(2, txtTelefoneCliente.getText());
                pst.setString(3, txtCelularCliente.getText());
                pst.setString(4, txtCpfCliente.getText());
                pst.setString(5, txtRgCliente.getText());
                pst.setString(6, txtEmailCliente.getText());
                pst.setString(7, txtContatoCliente.getText().toUpperCase());
                pst.setString(8, txtRuaCliente.getText().toUpperCase());
                pst.setString(9, txtQuadraCliente.getText().toUpperCase());
                pst.setString(10, txtLoteCliente.getText());
                pst.setString(11, txtNumeroCliente.getText());
                pst.setString(12, txtBairroCliente.getText().toUpperCase());
                pst.setString(13, txtComplementoCliente.getText().toUpperCase());
                pst.setString(14, txtCepCliente.getText());
                pst.setString(15, txtCidadeCliente.getText().toUpperCase());
                pst.setString(16, txtUFCliente.getText().toUpperCase());
                pst.setString(17, txtCodCliente.getText());
                // validaçao dos campos obrigatórios
                if (txtNomeCliente.getText().isEmpty()) {
                    JOptionPane.showMessageDialog(null, "Campo Nome é Obrigatório!");
                } else if (txtCpfCliente.getText().isEmpty()) {
                    JOptionPane.showMessageDialog(null, "Campo CPF é Obrigatório!");
                } else if (txtRgCliente.getText().isEmpty()) {
                    JOptionPane.showMessageDialog(null, "Campo RG é Obrigatório!");
                } else if (txtRuaCliente.getText().isEmpty()) {
                    JOptionPane.showMessageDialog(null, "Campo RUA é Obrigatório!");
                } else if (txtQuadraCliente.getText().isEmpty()) {
                    JOptionPane.showMessageDialog(null, "Campo QUADRA é Obrigatório!");
                } else if (txtLoteCliente.getText().isEmpty()) {
                    JOptionPane.showMessageDialog(null, "Campo LOTE é Obrigatório!");
                } else if (txtBairroCliente.getText().isEmpty()) {
                    JOptionPane.showMessageDialog(null, "Campo BAIRRO é Obrigatório!");
                } else if (txtCepCliente.getText().isEmpty()) {
                    JOptionPane.showMessageDialog(null, "Campo CEP é Obrigatório!");
                } else if (txtCidadeCliente.getText().isEmpty()) {
                    JOptionPane.showMessageDialog(null, "Campo CIDADE é Obrigatório!");
                } else if (txtUFCliente.getText().isEmpty()) {
                    JOptionPane.showMessageDialog(null, "Campo UF é Obrigatório!");
                } else {
                    int rowsAfected = pst.executeUpdate();

                    if (rowsAfected > 0) {
                        JOptionPane.showMessageDialog(null, "Cliente Alterado com Sucesso!");
                        btnCadastraCliente.setEnabled(true);
                        btnAlteraCliente.setEnabled(false);
                        btnExcluirCliente.setEnabled(false);
                        // O SELECT abaixoa seta a tabela com valores vazios
                        String sql2 = "select * from cliente where nomeCliente = 'XXXX' ";
                        try {
                            pst = conexao.prepareStatement(sql2);
                            rs = pst.executeQuery();
                            tblCliente.setModel(DbUtils.resultSetToTableModel(rs));
                            tblCliente.isValid();

                        } catch (Exception e) {
                            JOptionPane.showMessageDialog(null, e);
                        }

                        txtNomeCliente.setText("");
                        txtTelefoneCliente.setText("");
                        txtCelularCliente.setText("");
                        txtCpfCliente.setText("");
                        txtRgCliente.setText("");
                        txtEmailCliente.setText("");
                        txtContatoCliente.setText("");
                        txtRuaCliente.setText("");
                        txtQuadraCliente.setText("");
                        txtLoteCliente.setText("");
                        txtNumeroCliente.setText("");
                        txtBairroCliente.setText("");
                        txtComplementoCliente.setText("");
                        txtCepCliente.setText("");
                        txtCidadeCliente.setText("");
                        txtUFCliente.setText("");
                        txtNomeCliente.requestFocus();

                    }
                }

            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, e);
            }
        }
    }

//    private void limparCliente() {
//        String sql = "select * from entrada where descEntrada = 'xx'";
//        try {
//            pst = conexao.prepareStatement(sql);
//            //    pst.setString(1, "%" + txtPesquisaentrada.getText() + "%");
//            rs = pst.executeQuery();
//            tblEntrada.setModel(DbUtils.resultSetToTableModel(rs));
//        } catch (Exception e) {
//            JOptionPane.showMessageDialog(null, e);
//        }
//    }
    private void pesquisarCliente() {
        String sql = "select * from cliente where nomeCliente LIKE ? order by codCliente desc";
        try {
            pst = conexao.prepareStatement(sql);
            pst.setString(1, "%" + txtPesquisarCliente.getText() + "%");
            rs = pst.executeQuery();
            tblCliente.setModel(DbUtils.resultSetToTableModel(rs));
            tblCliente.isValid();

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }

    private void setarCampos() {
        int setar = tblCliente.getSelectedRow();
        txtCodCliente.setText(tblCliente.getModel().getValueAt(setar, 0).toString());
        txtNomeCliente.setText(tblCliente.getModel().getValueAt(setar, 1).toString());
        txtTelefoneCliente.setText(tblCliente.getModel().getValueAt(setar, 2).toString());
        txtCelularCliente.setText(tblCliente.getModel().getValueAt(setar, 3).toString());
        txtCpfCliente.setText(tblCliente.getModel().getValueAt(setar, 4).toString());
        txtRgCliente.setText(tblCliente.getModel().getValueAt(setar, 5).toString());
        txtEmailCliente.setText(tblCliente.getModel().getValueAt(setar, 6).toString());
        txtContatoCliente.setText(tblCliente.getModel().getValueAt(setar, 7).toString());
        txtRuaCliente.setText(tblCliente.getModel().getValueAt(setar, 8).toString());
        txtQuadraCliente.setText(tblCliente.getModel().getValueAt(setar, 9).toString());
        txtLoteCliente.setText(tblCliente.getModel().getValueAt(setar, 10).toString());
        txtNumeroCliente.setText(tblCliente.getModel().getValueAt(setar, 11).toString());
        txtBairroCliente.setText(tblCliente.getModel().getValueAt(setar, 12).toString());
        txtComplementoCliente.setText(tblCliente.getModel().getValueAt(setar, 13).toString());
        txtCepCliente.setText(tblCliente.getModel().getValueAt(setar, 14).toString());
        txtCidadeCliente.setText(tblCliente.getModel().getValueAt(setar, 15).toString());
        txtUFCliente.setText(tblCliente.getModel().getValueAt(setar, 16).toString());
        txtPesquisarCliente.requestFocus();
    }

    private void limparCampos() {
        btnCadastraCliente.setEnabled(true);
        btnAlteraCliente.setEnabled(false);
        btnExcluirCliente.setEnabled(false);
        txtNomeCliente.setText("");
        txtTelefoneCliente.setText("");
        txtCelularCliente.setText("");
        txtCpfCliente.setText("");
        txtRgCliente.setText("");
        txtEmailCliente.setText("");
        txtContatoCliente.setText("");
        txtRuaCliente.setText("");
        txtQuadraCliente.setText("");
        txtLoteCliente.setText("");
        txtNumeroCliente.setText("");
        txtBairroCliente.setText("");
        txtComplementoCliente.setText("");
        txtCepCliente.setText("");
        txtCidadeCliente.setText("");
        txtUFCliente.setText("");
        txtCodCliente.setText("");
        txtNomeCliente.requestFocus();
        String sql2 = "select * from cliente where nomeCliente = 'XXXX' ";
        try {
            pst = conexao.prepareStatement(sql2);
            rs = pst.executeQuery();
            tblCliente.setModel(DbUtils.resultSetToTableModel(rs));
            tblCliente.isValid();

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }

    }

    private void excluirCliente() {
           int confirma = JOptionPane.showConfirmDialog(null, "Confirma a remoção do Cliente? " + txtNomeCliente.getText(), "Atenção", JOptionPane.YES_NO_OPTION);
        //se confirmar for = YES_OPTION, o comando sql será executado, se txtUsuNom.getText(),
        //for Empty significa que não ha usuario com esse ID
        if (confirma == JOptionPane.YES_OPTION) {
         String sql = "delete from cliente where codCliente = ?";
        try {
              pst = conexao.prepareStatement(sql);
                pst.setString(1, txtCodCliente.getText());
                int rowsAffected = pst.executeUpdate();
        JOptionPane.showMessageDialog(null, "Cliente removido com Sucesso!");
        btnAlteraCliente.setEnabled(false);
        btnExcluirCliente.setEnabled(false);
        txtNomeCliente.setText("");
        txtTelefoneCliente.setText("");
        txtCelularCliente.setText("");
        txtCpfCliente.setText("");
        txtRgCliente.setText("");
        txtEmailCliente.setText("");
        txtContatoCliente.setText("");
        txtRuaCliente.setText("");
        txtQuadraCliente.setText("");
        txtLoteCliente.setText("");
        txtNumeroCliente.setText("");
        txtBairroCliente.setText("");
        txtComplementoCliente.setText("");
        txtCepCliente.setText("");
        txtCidadeCliente.setText("");
        txtUFCliente.setText("");
        txtCodCliente.setText("");
        txtNomeCliente.requestFocus();
        btnCadastraCliente.setEnabled(true);
        btnAlteraCliente.setEnabled(false);
        btnExcluirCliente.setEnabled(false);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }
    }

    private void imprimeRelatorioCliente() {
       try {
            //Usando a classe JasperPrint para preparar a impressao de um relatorio, o caminho pode ser usado '/' ou '\\'
            JasperPrint print = JasperFillManager.fillReport("C:\\imobiliaria\\relatorios\\relatorioClientes.jasper", null, conexao);
            //a linha abaixo exibe o relatorio através da classe JasperViewer
            JasperViewer.viewReport(print, false);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }
}
